sudo pacman -S --noconfirm ntfs-3g

lsblk

sudo blkid

sudo mkdir /mnt/windows

sudo mount -t ntfs-3g /dev/nvme0n1p3 /mnt/windows

ls /mnt/windows

code /etc/fstab

Add this line to the end :

UUID=8458B28658B27690 /mnt/windows ntfs-3g rw,auto,user,fmask=0022,dmask=0022,uid=1000,gid=1000,windows_names,locale=en_US.utf8,big_writes,async,noatime 0 0

Save

sudo mount -a

ln -s /mnt/windows/Users/Evrenos ~/windows

#############################################

# Definitive Guide: Mounting Windows Partitions in Arch Linux Using NTFS3

## Prerequisites Check

1. Verify kernel version (must be 5.15 or higher):
```bash
uname -r
```
If lower, update your system:
```bash
sudo pacman -Syu
```

2. Install necessary tools:
```bash
sudo pacman -S --noconfirm util-linux udisks2
```

## Step 1: Identify Windows Partition

1. List all partitions:
```bash
lsblk -f
```

2. Identify your Windows partition UUID:
```bash
sudo blkid | grep ntfs
```
Save the UUID (it looks like "1234-5678") for later use.

## Step 2: Prepare Mount Point

1. Create mount directory:
```bash
sudo mkdir -p /mnt/windows
```

2. Set correct ownership:
```bash
sudo chown $USER:$USER /mnt/windows
```

## Step 3: Test Mount

1. Unmount if already mounted:
```bash
sudo umount /mnt/windows 2>/dev/null
```

2. Test mount using NTFS3:
```bash
sudo mount -t ntfs3 /dev/nvme0n1p3 /mnt/windows \
  -o uid=$(id -u),gid=$(id -g),iocharset=utf8,compress,noatime
```

3. Verify mount:
```bash
df -h /mnt/windows
```

4. Test write permissions:
```bash
touch /mnt/windows/test_file && rm /mnt/windows/test_file
```

## Step 4: Configure Automatic Mounting

1. Back up current fstab:
```bash
sudo cp /etc/fstab /etc/fstab.backup
```

2. Get your user ID and group ID:
```bash
echo "Your UID is: $(id -u)"
echo "Your GID is: $(id -g)"
```

3. Add mount entry to fstab:
```bash
echo "UUID=$(sudo blkid -s UUID -o value /dev/nvme0n1p3) /mnt/windows ntfs3 uid=$(id -u),gid=$(id -g),iocharset=utf8,compress,noatime,discard,prealloc 0 0" | sudo tee -a /etc/fstab
```

## Step 5: Apply and Verify

1. Unmount current mount:
```bash
sudo umount /mnt/windows
```

2. Mount all fstab entries:
```bash
sudo mount -a
```

3. Verify successful mount:
```bash
mount | grep windows
```

## Step 6: Performance Optimization

1. Add kernel parameter for NTFS3. Edit your bootloader configuration:

For GRUB:
```bash
sudo nano /etc/default/grub
```
Add to GRUB_CMDLINE_LINUX_DEFAULT:
```
ntfs3.max_prealloc_size=2G
```
Then update GRUB:
```bash
sudo grub-mkconfig -o /boot/grub/grub.cfg
```

2. Optimize I/O scheduler:
```bash
echo 'ACTION=="add|change", KERNEL=="nvme0n1", ATTR{queue/scheduler}="mq-deadline"' | sudo tee /etc/udev/rules.d/60-scheduler.rules
```

## Step 7: Create Convenient Access

1. Create symbolic link to Windows user folder:
```bash
ln -s /mnt/windows/Users/YourWindowsUsername ~/windows
```
Replace YourWindowsUsername with your actual Windows username.

## Step 8: QBittorrent Optimization

1. Configure QBittorrent:
   - Open QBittorrent
   - Tools → Options → Downloads
   - Set "Async I/O threads" to 4
   - Uncheck "Pre-allocate disk space"
   - Set "Default Torrent Management Mode" to "Manual"

2. Create QBittorrent launcher script:
```bash
echo '#!/bin/bash
nice -n 19 ionice -c 2 -n 7 qbittorrent "$@"' | sudo tee /usr/local/bin/qbittorrent-optimized
```

3. Make it executable:
```bash
sudo chmod +x /usr/local/bin/qbittorrent-optimized
```

## Verification Tests

Run these tests to ensure everything is working correctly:

1. Speed test:
```bash
dd if=/dev/zero of=/mnt/windows/testfile bs=1M count=1000 status=progress
rm /mnt/windows/testfile
```

2. Permission test:
```bash
mkdir /mnt/windows/test_dir
touch /mnt/windows/test_dir/test_file
rm -r /mnt/windows/test_dir
```

## Troubleshooting

If you encounter any issues:

1. Check system logs:
```bash
journalctl -f
```

2. Verify mount options:
```bash
mount | grep windows
```

3. Check for errors:
```bash
dmesg | grep -i ntfs
```

## Additional Notes

- Windows Fast Startup can cause issues. To disable it in Windows:
  1. Open Control Panel
  2. Go to Power Options
  3. Click "Choose what the power buttons do"
  4. Click "Change settings that are currently unavailable"
  5. Uncheck "Turn on fast startup"
  6. Click Save changes

- If you need to force mount (use only if necessary):
```bash
sudo mount -t ntfs3 -o uid=$(id -u),gid=$(id -g),force /dev/nvme0n1p3 /mnt/windows
```

## Final Step: Reboot and Verify

1. Reboot your system:
```bash
sudo reboot
```

2. After reboot, verify mount:
```bash
mount | grep windows
df -h /mnt/windows
```

Your Windows partition should now be perfectly mounted using NTFS3, providing optimal performance and stability.
