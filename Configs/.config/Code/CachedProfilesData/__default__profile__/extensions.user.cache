{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/evrenos/.vscode/extensions/extensions.json","path":"/home/evrenos/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1727426346477,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.93.1","productDate":"2024-09-11T17:20:05.685Z","productCommit":"38c31bc77e0dd6ae88a4e9cc93428cc27a56ba40","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"xabikos.javascriptsnippets","uuid":"a2cec723-5349-460d-9de9-0fd1f8d3456f"},"manifest":{"name":"JavaScriptSnippets","description":"Code snippets for JavaScript in ES6 syntax","version":"1.8.0","displayName":"JavaScript (ES6) code snippets","publisher":"xabikos","icon":"images/javascript.png","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/xabikos/vscode-javascript"},"engines":{"vscode":"0.10.x"},"categories":["Snippets"],"contributes":{"snippets":[{"language":"javascript","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/snippets.json"},{"language":"javascriptreact","path":"./snippets/snippets.json"},{"language":"typescriptreact","path":"./snippets/snippets.json"},{"language":"html","path":"./snippets/snippets.json"},{"language":"vue","path":"./snippets/snippets.json"}]}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/xabikos.javascriptsnippets-1.8.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"charalampos karypidis","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"a2cec723-5349-460d-9de9-0fd1f8d3456f","publisherId":"8961c3fe-3ec6-429d-886a-50b5af362a88","publisherDisplayName":"charalampos karypidis","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"mikaelkristiansson87.react-theme-vscode","uuid":"5016cebf-ae4e-47ab-b19d-9931db68b43d"},"manifest":{"name":"react-theme-vscode","displayName":"React Theme","description":"Theme based on React's website colors","version":"1.3.0","publisher":"mikaelkristiansson87","author":"Mikael Kristiansson <mikael.kristiansson87@gmail.com>","icon":"logo.png","license":"MIT","repository":{"type":"git","url":"https://github.com/mikaelkristiansson/react-theme-vscode"},"engines":{"vscode":"^1.28.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"React Theme","uiTheme":"vs-dark","path":"./themes/react-theme-color-theme.json"}]},"keywords":["Vscode","Theme","react"]},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/mikaelkristiansson87.react-theme-vscode-1.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"mikaelkristiansson87","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"5016cebf-ae4e-47ab-b19d-9931db68b43d","publisherId":"e611a6ba-43a4-4bdd-9229-a89d39ed00a6","publisherDisplayName":"mikaelkristiansson87","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"simonsiefke.svg-preview","uuid":"51cd7dfb-14fa-4fcc-aa42-16add9281456"},"manifest":{"name":"svg-preview","displayName":"Svg Preview","description":"Preview for Svg files","version":"2.8.3","publisher":"SimonSiefke","extensionKind":["ui","workspace"],"license":"MIT","homepage":"https://github.com/SimonSiefke/vscode-svg-preview","repository":{"type":"git","url":"https://github.com/SimonSiefke/vscode-svg-preview.git"},"bugs":{"url":"https://github.com/SimonSiefke/vscode-svg-preview/issues"},"icon":"images/icon.png","galleryBanner":{"color":"#242b2b","theme":"dark"},"engines":{"vscode":"^1.41.0"},"categories":["Other"],"keywords":["svg preview","svg","preview","live"],"activationEvents":["onLanguage:xml","onLanguage:svg","onWebviewPanel:svgPreview","onCommand:svgPreview.showPreview","onCommand:svgPreview.showPreviewToSide"],"contributes":{"commands":[{"category":"Svg Preview","command":"svgPreview.showPreview","title":"Open Preview"},{"category":"Svg Preview","command":"svgPreview.showPreviewToSide","title":"Open Preview to the Side","icon":{"light":"images/bolt_original_darkgray_optimized.svg","dark":"images/bolt_original_lightgray_optimized.svg"}},{"category":"Svg Preview","command":"svgPreview.reloadPreview","title":"Reload Preview","icon":{"light":"images/refresh_dark.svg","dark":"images/refresh_light.svg"}}],"keybindings":[{"command":"svgPreview.showPreviewToSide","key":"ctrl+alt+p","when":"resourceLangId == svg ||resourceLangId == xml"}],"menus":{"commandPalette":[{"command":"svgPreview.showPreview","when":"false","group":"navigation"},{"command":"svgPreview.showPreviewToSide","group":"navigation"},{"command":"svgPreview.reloadPreview","when":"svgPreviewIsOpen == true","group":"navigation"}],"explorer/context":[{"command":"svgPreview.showPreview","group":"navigation","when":"resourceLangId == xml && resourceExtname == .svg"}],"editor/title":[{"command":"svgPreview.showPreviewToSide","group":"navigation","when":"editorLangId == xml && resourceExtname == .svg && svgPreviewIsOpen == false"},{"command":"svgPreview.reloadPreview","when":"svgPreviewIsFocused && !editorLangId","group":"navigation"}]},"configuration":{"type":"object","title":"Svg Preview","properties":{"svgPreview.autoOpen":{"type":"boolean","default":true,"description":"Automatically open the preview when an svg file is opened.","scope":"resource"},"svgPreview.scaleToFit":{"type":"boolean","default":true,"description":"Whether or not the svg should be scaled to fit the viewport or keep its original size","scope":"resource"},"svgPreview.style":{"type":"object","description":"Custom style for the preview.","additionalProperties":false,"default":{},"properties":{"html":{"type":"object","description":"Custom style for the html element.","properties":{"background":{"type":"string"},"background-position":{"type":"string"},"background-image":{"type":"string"},"background-size":{"type":"string"},"background-repeat":{"type":"string","enum":["repeat","space","round","repeat-y","repeat-x","repeat no-repeat","no-repeat"]},"margin":{"type":"string"},"padding":{"type":"string"}}},"img":{"type":"object","description":"Custom style for the image.","properties":{"border":{"type":"string"},"margin":{"type":"string"},"padding":{"type":"string"}}}},"scope":"resource"}}}},"main":"./packages/extension/dist/extension.js"},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/simonsiefke.svg-preview-2.8.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Simon Siefke","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"51cd7dfb-14fa-4fcc-aa42-16add9281456","publisherId":"32e71950-4c8a-4269-b6b9-828664a73f1e","publisherDisplayName":"Simon Siefke","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"bbenoist.nix","uuid":"5b21bd54-5258-4a3e-887f-193d9bb5f063"},"manifest":{"name":"Nix","description":"Nix language support for Visual Studio Code.","version":"1.0.1","publisher":"bbenoist","icon":"images/icon.png","galleryBanner":{"color":"#FFFFFF","theme":"light"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/bbenoist/vscode-nix/issues"},"homepage":"https://github.com/bbenoist/vscode-nix/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bbenoist/vscode-nix.git"},"engines":{"vscode":"^0.10.1"},"categories":["Languages"],"contributes":{"languages":[{"id":"nix","extensions":[".nix"],"configuration":"./nix.configuration.json"}],"grammars":[{"language":"nix","scopeName":"source.nix","path":"./syntaxes/nix.tmLanguage"}]}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/bbenoist.nix-1.0.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Baptist BENOIST","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"5b21bd54-5258-4a3e-887f-193d9bb5f063","publisherId":"787ce942-60d4-48d6-b14e-25bdc72bd145","publisherDisplayName":"Baptist BENOIST","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"dbaeumer.vscode-eslint","uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a"},"manifest":{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"3.0.10","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.90.0"},"activationEvents":["onStartupFinished"],"extensionKind":["workspace"],"enabledApiProposals":[],"main":"./client/out/extension","capabilities":{"virtualWorkspaces":{"supported":false,"description":"Using ESLint is not possible in virtual workspaces."},"untrustedWorkspaces":{"supported":false,"description":"The extension requires workspace trust because it loads configuration files and code from the workspace and executes it."}},"contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules.","deprecationMessage":"The setting is deprecated. The Package Manager is automatically detected now."},"eslint.problems.shortenToSingleLine":{"type":"boolean","default":false,"description":"Shortens the text spans of underlined problems to their first related line.","scope":"resource"},"eslint.nodeEnv":{"scope":"resource","type":["string","null"],"default":null,"markdownDescription":"The value of `NODE_ENV` to use when running eslint tasks."},"eslint.nodePath":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"A path added to `NODE_PATH` when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"markdownDescription":"The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off.","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.onIgnoredFiles":{"scope":"resource","type":"string","enum":["warn","off"],"default":"off","description":"Whether ESLint should issue a warning on ignored files."},"eslint.migration.2_x":{"scope":"application","type":"string","enum":["off","on"],"default":"on","description":"Whether ESlint should migrate auto fix on save settings."},"eslint.useESLintClass":{"scope":"resource","type":"boolean","default":false,"description":"Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available."},"eslint.useFlatConfig":{"scope":"resource","type":"boolean","default":null,"markdownDescription":"Controls whether flat config should be used or not. This setting requires ESLint version 8.57 or later and is interpreted according to the [ESLint Flat Config rollout plan](https://eslint.org/blog/2023/10/flat-config-rollout-plans/)."},"eslint.experimental.useFlatConfig":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"Use ESLint version 8.57 or later and `eslint.useFlatConfig` instead.","description":"Enables support of experimental Flat Config (aka eslint.config.js). Requires ESLint version >= 8.21 < 8.57.0)."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"mode":{"type":"string","enum":["auto","location"],"default":"location"}},"required":["mode"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}},"deprecationMessage":"Use the new !cwd form.","required":["directory"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["directory"]},{"type":"object","properties":{"pattern":{"type":"string","description":"A glob pattern to match a working directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["pattern"]}]},"markdownDescription":"Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly."},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error."},"eslint.ignoreUntitled":{"scope":"resource","type":"boolean","default":false,"description":"If true, untitled files won't be validated by ESLint."},"eslint.probe":{"scope":"resource","type":"array","items":{"type":"string"},"default":["astro","javascript","javascriptreact","typescript","typescriptreact","html","mdx","vue","markdown","json","jsonc"],"description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead.","description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.enable":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.options":{"scope":"resource","type":"string","default":".","markdownDescription":"Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface)."},"eslint.runtime":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"The location of the node binary to run ESLint under."},"eslint.execArgv":{"scope":"machine-overridable","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size"},"eslint.debug":{"scope":"window","type":"boolean","default":false,"markdownDescription":"Enables ESLint debug mode (same as `--debug` on the command line)"},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine","commentStyle":"line"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."},"commentStyle":{"type":"string","enum":["line","block"],"default":"line","definition":"The comment style to use when disabling a rule on a specific line."}},"additionalProperties":false,"markdownDescription":"Show disable lint rule in the quick fix menu."},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}},"additionalProperties":false,"markdownDescription":"Show open lint rule documentation web page in the quick fix menu."},"eslint.codeActionsOnSave.mode":{"scope":"resource","type":"string","enum":["all","problems"],"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."],"default":"all","markdownDescription":"Specifies the code action mode. Possible values are 'all' and 'problems'."},"eslint.codeActionsOnSave.rules":{"scope":"resource","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration"},"eslint.format.enable":{"scope":"resource","type":"boolean","default":false,"description":"Enables ESLint as a formatter."},"eslint.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules."},"eslint.notebooks.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"A special rules customization section for text cells in notebook documents."},"eslint.timeBudget.onValidation":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":4000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning."},"error":{"type":"number","default":8000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing an error."}},"default":{"warn":4000,"error":8000},"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning or error."},"eslint.timeBudget.onFixes":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":3000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning."},"error":{"type":"number","default":6000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing an error."}},"default":{"warn":3000,"error":6000},"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning or error."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"},{"title":"Migrate Settings","category":"ESLint","command":"eslint.migrateSettings"},{"title":"Restart ESLint Server","category":"ESLint","command":"eslint.restart"},{"title":"Revalidate all open files","category":"ESLint","command":"eslint.revalidate"}],"taskDefinitions":[{"type":"eslint"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"ignore","extensions":[".eslintignore"]},{"id":"jsonc","filenames":[".eslintrc.json"]}]},"scripts":{"vscode:prepublish":"npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","test":"cd client && npm test && cd ..","lint":"node ./build/bin/all.js run lint","clean":"rimraf client/out && rimraf server/out","postinstall":"node ./build/bin/all.js install","symlink:lsp":"node ./build/bin/symlink.js"},"devDependencies":{"@types/mocha":"^10.0.6","@types/node":"^18.14.6","@typescript-eslint/eslint-plugin":"^7.1.1","@typescript-eslint/parser":"^7.1.1","eslint":"^8.57.0","merge-options":"^3.0.4","mocha":"^10.3.0","rimraf":"^5.0.5","ts-loader":"^9.5.1","typescript":"^5.3.3","webpack":"^5.90.3","webpack-cli":"^5.1.4","shelljs":"^0.8.5"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/dbaeumer.vscode-eslint-3.0.10","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","publisherId":"29859a75-d81b-4f0e-8578-2c80ecee6f99","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"aaron-bond.better-comments","uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b"},"manifest":{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"3.0.2","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"sponsor":{"url":"https://github.com/sponsors/aaron-bond"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.65.0"},"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"browser":"./out/web/extension.js","main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint -c tslint.json 'src/**/*.ts'","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"?","color":"#3498DB","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"//","color":"#474747","strikethrough":true,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"todo","color":"#FF8C00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"*","color":"#98C379","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false}]}}}},"dependencies":{"json5":"^2.2.1"},"devDependencies":{"@types/json5":"^2.2.0","@types/node":"^17.0.23","@types/vscode":"^1.65.0","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.3.1","tslint":"^6.1.3","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.10.0","webpack":"^5.74.0","webpack-cli":"^4.10.0"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/aaron-bond.better-comments-3.0.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Aaron Bond","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"7a0110bb-231a-4598-aa1b-0769ea46d28b","publisherId":"02145bab-b083-4d1e-b8ec-08d7abdd68da","publisherDisplayName":"Aaron Bond","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"moalamri.inline-fold","uuid":"4dc4b505-dda3-4ac6-b839-397f8cf0adcc"},"manifest":{"name":"inline-fold","displayName":"Inline fold","description":"A custom decorator that \"fold\" matching content in single line","icon":"res/icon.png","version":"0.2.6","publisher":"moalamri","homepage":"https://github.com/moalamri/vscode-inline-fold","bugs":"https://github.com/moalamri/vscode-inline-fold/issues","license":"MIT","repository":{"type":"git","url":"https://github.com/moalamri/vscode-inline-fold"},"engines":{"vscode":"^1.74.0"},"categories":["Visualization","Other"],"activationEvents":["onStartupFinished"],"main":"./out/extension.js","contributes":{"commands":[{"command":"inlineFold.toggle","title":"Inline Fold: Toggle"},{"command":"inlineFold.clearCache","title":"Inline Fold: Clear session cache"}],"configuration":{"type":"object","title":"Inline Fold","properties":{"inlineFold.autoFold":{"type":"boolean","scope":"language-overridable","description":"Set the default state of inline fold when opening a file","default":true},"inlineFold.togglePerFile":{"type":"boolean","scope":"language-overridable","description":"Toggle inline fold per file, instead of per workspace","default":true},"inlineFold.useGlobal":{"type":"boolean","scope":"language-overridable","description":"Change the order to use global configuration before language-specific","default":false},"inlineFold.supportedLanguages":{"type":"array","description":"Supported languages","items":{"type":"string","description":"Language Ids: https://code.visualstudio.com/docs/languages/identifiers#_known-language-identifiers"},"minItems":1,"default":["astro","vue","html","svelte","vue-html","php","blade","erb","twig","nunjucks","django-html","jinja-html","javascript","typescript","javascriptreact","typescriptreact"]},"inlineFold.regex":{"type":"string","description":"Regex to match","scope":"language-overridable","default":"(class|className)=(({(`|))|(['\"`]))(.*?)(\\2|(\\4)})","examples":["(class|className)=(({(`|))|(['\"`]))(.*?)(\\2|(\\4)})","(class|className)=[`'{\"]([^`'\"}]+)[`'\"}]","id=\"([a-zA-Z0-9-\\s]+)(?=\")"]},"inlineFold.regexFlags":{"type":"string","scope":"language-overridable","description":"Regex flags","default":"g","examples":["g","gi"]},"inlineFold.regexGroup":{"type":["string","number"],"scope":"language-overridable","description":"Regex capture group number for content that will be folded","default":"6","examples":["1","2","3","4","5","6"]},"inlineFold.maskChar":{"type":"string","scope":"language-overridable","description":"The mask that covers the folded text","default":"◦◦◦","examples":["◦◦◦","▶▶▶","⌨"]},"inlineFold.maskColor":{"type":"string","scope":"language-overridable","description":"The color of the covering mask in hex","default":"#68D7AC","examples":["#68D7AC","#FF0000"]},"inlineFold.unfoldedOpacity":{"type":"number","scope":"language-overridable","description":"The opacity of the unfolded text (from 0 to 1)","default":0.7,"enum":[0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1]},"inlineFold.after":{"type":"string","scope":"language-overridable","description":"(Optional) Add any text/character to be appended to the folded text","default":"","examples":["+","<-","<<"]},"inlineFold.unfoldOnLineSelect":{"type":"boolean","scope":"language-overridable","description":"(Optional) unfold the line when any part of the line is selected","default":false},"inlineFold.disableInDiffEditor":{"type":"boolean","scope":"language-overridable","description":"(Optional) disable fold in diff editor","default":false}},"required":["inlineFold.regex","inlineFold.regexFlags","inlineFold.regexGroup","inlineFold.maskChar","inlineFold.supportedLanguages"]}},"scripts":{"vscode:prepublish":"pnpm run compile","package":"vsce package","publish":"vsce publish","compile":"tsc -p ./","watch":"tsc -watch -p ./"},"devDependencies":{"@types/vscode":"1.74.0","@types/node":"^18.11.18","typescript":"4.9.4"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/moalamri.inline-fold-0.2.6","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Mohammed Alamri","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"4dc4b505-dda3-4ac6-b839-397f8cf0adcc","publisherId":"41376028-10e6-4784-aff4-9c6be1c5c66e","publisherDisplayName":"Mohammed Alamri","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"stylelint.vscode-stylelint","uuid":"ec35b5a3-9802-4c68-b5ff-e85f19ec0977"},"manifest":{"name":"vscode-stylelint","version":"1.4.0","license":"MIT","description":"Official Stylelint extension for Visual Studio Code","main":"dist/index.js","displayName":"Stylelint","publisher":"stylelint","repository":{"type":"git","url":"https://github.com/stylelint/vscode-stylelint.git"},"homepage":"https://github.com/stylelint/vscode-stylelint#readme","bugs":"https://github.com/stylelint/vscode-stylelint/issues","qna":"https://stackoverflow.com/questions/tagged/vscode+stylelint","sponsor":{"url":"https://opencollective.com/stylelint"},"icon":"media/stylelint.png","engines":{"vscode":">=1.82.3","node":">=18.15.0"},"galleryBanner":{"color":"#000000","theme":"dark"},"categories":["Linters","Snippets","Programming Languages"],"keywords":["css","less","sass","scss","sugarss","lint","linter","style","stylelint","validation","check"],"activationEvents":["onStartupFinished"],"contributes":{"configuration":{"type":"object","title":"Stylelint","properties":{"stylelint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Control whether Stylelint is enabled or not."},"stylelint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"location":"separateLine"},"properties":{"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure whether disable comments are added on the same line or a new line."}},"additionalProperties":false,"description":"Options for the disable lint rule action in the quick fix menu."},"stylelint.config":{"scope":"resource","type":["object","null"],"default":null,"description":"A Stylelint configuration object."},"stylelint.configFile":{"scope":"resource","type":"string","default":"","description":"Path to a JSON, YAML, or JS file that contains your configuration object. Use this option if you don't want Stylelint to search for a configuration file."},"stylelint.configBasedir":{"scope":"resource","type":"string","default":"","description":"A path to the directory that relative paths defining \"extends\" and \"plugins\" are relative to."},"stylelint.customSyntax":{"scope":"resource","type":"string","default":"","description":"An absolute path to a custom PostCSS-compatible syntax module."},"stylelint.reportDescriptionlessDisables":{"scope":"resource","type":"boolean","default":false,"description":"Report `stylelint-disable` comments without a description."},"stylelint.ignoreDisables":{"scope":"resource","type":"boolean","default":false,"description":"Ignore `stylelint-disable` (e.g. `/* stylelint-disable block-no-empty */`) comments."},"stylelint.reportNeedlessDisables":{"scope":"resource","type":"boolean","default":false,"description":"Also report errors for `stylelint-disable` comments that are not blocking a lint warning."},"stylelint.reportInvalidScopeDisables":{"scope":"resource","type":"boolean","default":false,"description":"Also report errors for `stylelint-disable` comments that used for rules that don't exist within the configuration object."},"stylelint.stylelintPath":{"scope":"resource","type":"string","default":"","description":"Supply a custom path to the Stylelint module."},"stylelint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"stylelint.validate":{"scope":"resource","type":"array","items":{"type":"string"},"default":["css","postcss"],"description":"An array of language ids which should be validated by Stylelint."},"stylelint.snippet":{"scope":"resource","type":"array","items":{"type":"string"},"default":["css","postcss"],"description":"An array of language ids which snippets are provided by Stylelint."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"Stylelint","command":"stylelint.executeAutofix"},{"title":"Restart Stylelint Server","category":"Stylelint","command":"stylelint.restart"}],"jsonValidation":[{"fileMatch":"**/.stylelintrc*","url":"https://json.schemastore.org/stylelintrc.json"}],"languages":[{"id":"ignore","filenames":[".stylelintignore"]}]},"dependencies":{"@types/triple-beam":"^1.3.5","fast-diff":"^1.2.0","path-is-inside":"^1.0.2","rfdc":"^1.3.1","semver":"^7.6.0","serialize-error":"^8.1.0","triple-beam":"^1.4.1","vscode-languageclient":"^9.0.1","vscode-languageserver":"^9.0.1","vscode-languageserver-protocol":"^3.17.5","vscode-languageserver-textdocument":"^1.0.11","vscode-languageserver-types":"^3.17.5","vscode-uri":"^3.0.8","winston":"^3.12.0","winston-transport":"^4.7.0"},"devDependencies":{"@stylelint/postcss-css-in-js":"^0.38.0","@stylelint/prettier-config":"^3.0.0","@types/jest":"^27.0.3","@types/path-is-inside":"^1.0.0","@types/semver":"^7.5.8","@types/vscode":"1.82.0","@typescript-eslint/eslint-plugin":"^7.3.1","@typescript-eslint/parser":"^7.3.1","@typescript/lib-dom":"npm:@types/web@^0.0.47","@vscode/test-electron":"^1.6.2","cspell":"^8.6.0","esbuild":"^0.20.2","eslint":"^8.57.0","eslint-config-stylelint":"^21.0.0","eslint-plugin-jest":"^27.9.0","fast-glob":"^3.2.7","jest":"^27.4.3","jest-runner-vscode":"^2.1.0","npm-run-all":"^4.1.5","p-wait-for":"^3.1.0","postcss":"^8.4.31","postcss-sass":"^0.5.0","postcss-scss":"^4.0.9","prettier":"^3.2.5","stylelint":"^15.10.2","stylelint-processor-glamorous":"^0.3.0","stylelint-processor-styled-components":"^1.10.0","stylelint-scss":"^5.3.2","ts-jest":"^27.0.7","ts-node":"^10.4.0","typed-emitter":"^2.1.0","typescript":"^4.9.5"},"scripts":{"build":"tsc -p tsconfig.src.json","build-bundle-watch":"run:p build-watch bundle-watch","build-watch":"npm run build -- --watch","bundle":"npm run bundle-base -- --sourcemap","bundle-base":"ts-node --transpile-only -P tsconfig.scripts.json scripts/bundle.ts","bundle-watch":"npm run bundle-base -- --sourcemap --watch","build-bundle":"run-s build bundle","download-vscode":"ts-node --transpile-only -P tsconfig.scripts.json scripts/download-vscode.ts","format":"prettier . --write","lint":"run-s \"lint:*\"","lint:formatting":"prettier . --check","lint:js":"eslint .","lint:spelling":"cspell lint --no-progress","lint:types":"tsc -b","lint:unit-tests":"ts-node --transpile-only -P tsconfig.scripts.json scripts/enforce-unit-tests-per-file.ts","test":"npm run build-bundle && jest","test:e2e":"npm run build-bundle && jest --projects test/e2e","test:integration":"jest --projects test/integration","test:unit":"jest --projects test/unit","vscode:prepublish":"npm run build && npm run bundle-base -- --minify"},"prettier":"@stylelint/prettier-config","volta":{"node":"18.15.0","npm":"9.9.2"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/stylelint.vscode-stylelint-1.4.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Stylelint","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"ec35b5a3-9802-4c68-b5ff-e85f19ec0977","publisherId":"9b5a71ad-b322-429c-aad2-a10a3f15781d","publisherDisplayName":"Stylelint","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"aykutsarac.jsoncrack-vscode","uuid":"87c9998f-5c0f-49ee-b89f-51340cdc449a"},"manifest":{"name":"jsoncrack-vscode","version":"2.0.3","displayName":"JSON Crack","description":"Seamlessly visualize your JSON data instantly into graphs.","publisher":"AykutSarac","author":{"email":"aykutsarac0@gmail.com","name":"Aykut Saraç"},"homepage":"https://jsoncrack.com","icon":"assets/jsoncrack.png","galleryBanner":{"color":"#202225","theme":"dark"},"sponsor":{"url":"https://github.com/sponsors/AykutSarac"},"engines":{"vscode":"^1.63.0"},"categories":["Visualization"],"keywords":["json","visualizer","jsoncrack","data","yaml","livepreview"],"activationEvents":["workspaceContains:**/*.{json}"],"main":"./build/ext-src/extension.js","contributes":{"commands":[{"command":"jsoncrack-vscode.start","title":"Enable JSON Crack visualization","category":"menubar","icon":{"light":"./assets/icon.svg","dark":"./assets/icon.svg"}},{"command":"jsoncrack-vscode.start.specific","title":"Enable JSON Crack visualization for specific file","category":"menubar"}],"menus":{"commandPalette":[{"command":"jsoncrack-vscode.start","when":"never"}],"editor/title":[{"command":"jsoncrack-vscode.start","when":"resourceExtname == .json || editorLangId == json","group":"navigation"}]}},"scripts":{"vscode:prepublish":"yarn run package","start":"react-scripts start","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"yarn run compile-tests && yarn run compile && yarn run lint","lint":"eslint . --ext .ts,.tsx","test":"node ./out/test/runTest.js","build":"./scripts/build-non-split.js && tsc -p tsconfig.extension.json","watch-build":"nodemon --watch src --ext js,tsx,ts --exec \"yarn run build\"","eject":"react-scripts eject"},"devDependencies":{"@types/glob":"^8.1.0","@types/mocha":"^9.1.1","@types/node":"16.x","@types/react":"^18.0.20","@types/react-dom":"^18.0.6","@types/vscode":"^1.63.0","@typescript-eslint/eslint-plugin":"^5.31.0","@typescript-eslint/parser":"^5.31.0","@vscode/test-electron":"^2.3.4","eslint":"^8.20.0","glob":"^10.3.3","mocha":"^10.0.0","nodemon":"^2.0.20","react-scripts":"^5.0.1","rewire":"^7.0.0","ts-loader":"^9.3.1","typescript":"^4.7.4","webpack":"^5.74.0","webpack-cli":"^4.10.0"},"dependencies":{"jsoncrack-react":"^0.0.1-beta.3","react":"^18.2.0","react-dom":"^18.2.0","styled-components":"^6.0.7","terser":"^5.19.2"},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]},"repository":{"type":"git","url":"https://github.com/AykutSarac/jsoncrack-vscode"},"bugs":{"url":"https://github.com/AykutSarac/jsoncrack-vscode/issues"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/aykutsarac.jsoncrack-vscode-2.0.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Aykut Saraç","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"87c9998f-5c0f-49ee-b89f-51340cdc449a","publisherId":"29da73b9-966a-467b-8a22-12f62d0807b1","publisherDisplayName":"Aykut Saraç","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"christian-kohler.path-intellisense","uuid":"a41c1549-4053-44d4-bf30-60fc809b4a86"},"manifest":{"name":"path-intellisense","private":true,"displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"2.9.0","publisher":"christian-kohler","engines":{"vscode":"^1.43.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","sponsor":{"url":"https://github.com/sponsors/ChristianKohler"},"repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths.  The values should be interpreted as absolute paths (and can use '${workspaceFolder}')"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"},"path-intellisense.absolutePathTo":{"type":"string","description":"If defined, unmapped absolute path imports are based on this location.  Takes priority over 'absolutePathToWorkspace' if both are defined"},"path-intellisense.showOnAbsoluteSlash":{"type":"boolean","default":true,"description":"Shows suggestions when the import starts with a forward slash ('/')"},"path-intellisense.ignoreTsConfigBaseUrl":{"type":"boolean","default":false,"description":"Ignores tsconfig file for mappings"},"path-intellisense.autoTriggerNextSuggestion":{"type":"boolean","default":false,"description":"Automatically triggers next suggestion after previous suggestion"}}}},"main":"./out/extension.js","browser":"./dist/web/extension.js","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","lint":"eslint src --ext ts","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","test":"node ./out/test/runTest.js","test-headless":"xvfb-run -a npm test","package":"vsce package","deploy":"vsce publish","prepack":"npm run package && npm run package-web","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@semantic-release/changelog":"^5.0.1","@semantic-release/git":"^9.0.0","@semantic-release/npm":"^7.0.5","@types/benchmark":"^1.0.31","@types/glob":"^7.1.1","@types/mocha":"^7.0.1","@types/node":"^12.11.7","@types/vscode":"^1.43.0","@typescript-eslint/eslint-plugin":"^2.18.0","@typescript-eslint/parser":"^2.18.0","eslint":"^6.8.0","glob":"^7.1.6","mocha":"^7.0.1","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.2.5","typescript":"^3.9.10","vsce":"^1.76.0","webpack":"^5.51.1","webpack-cli":"^4.8.0"},"dependencies":{"@types/json5":"0.0.30","@vscode/test-electron":"^2.4.0","benchmark":"^2.1.4","json5":"^2.1.2","lodash":"^4.17.19","minimatch":"^3.0.4"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/christian-kohler.path-intellisense-2.9.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Christian Kohler","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"a41c1549-4053-44d4-bf30-60fc809b4a86","publisherId":"a892fb38-060b-475f-9e73-2e06a8a17a68","publisherDisplayName":"Christian Kohler","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"brittanychiang.halcyon-vscode","uuid":"da302e39-e7df-4ef8-8ddd-73eb422fb70b"},"manifest":{"name":"halcyon-vscode","displayName":"Halcyon Theme","description":"A dark blue theme for VS Code based on the Ayu Mirage theme","version":"0.3.0","publisher":"brittanychiang","icon":"images/logo.png","author":{"name":"Brittany Chiang","email":"brittany.chiang@gmail.com"},"repository":{"type":"git","url":"https://github.com/bchiang7/halcyon-vscode"},"bugs":{"url":"https://github.com/bchiang7/halcyon-vscode/issues","email":"brittany.chiang@gmail.com"},"homepage":"https://github.com/bchiang7/halcyon-vscode/blob/master/README.md","galleryBanner":{"color":"#171c28","theme":"dark"},"engines":{"vscode":"^1.18.0"},"categories":["Themes"],"keywords":["Themes","Dark Theme","color-theme","Halcyon"],"contributes":{"themes":[{"label":"Halcyon","uiTheme":"vs-dark","path":"./themes/halcyon-color-theme.json"}]},"devDependencies":{"@babel/core":"^7.22.5","@babel/eslint-parser":"^7.22.5","@upstatement/eslint-config":"^2.0.0","@upstatement/prettier-config":"^1.1.0","eslint":"^8.43.0","eslint-config-prettier":"^8.8.0","prettier":"^2.8.8","vsce":"^2.15.0"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/brittanychiang.halcyon-vscode-0.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"brittanychiang","metadata":{"installedTimestamp":1727425363881,"pinned":true,"source":"gallery","id":"da302e39-e7df-4ef8-8ddd-73eb422fb70b","publisherId":"c25e50fb-d96f-4c60-b941-ca7f1abd821d","publisherDisplayName":"brittanychiang","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"bradlc.vscode-tailwindcss","uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5"},"manifest":{"name":"vscode-tailwindcss","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","author":"Brad Cornes <hello@bradley.dev>","license":"MIT","version":"0.12.5","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.67.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["onStartupFinished"],"main":"dist/extension.js","capabilities":{"virtualWorkspaces":false},"contributes":{"languages":[{"id":"tailwindcss","aliases":["Tailwind CSS"],"configuration":"./tailwindcss.language.configuration.json","icon":{"light":"media/icon.png","dark":"media/icon.png"}}],"commands":[{"command":"tailwindCSS.showOutput","title":"Tailwind CSS: Show Output","enablement":"tailwindCSS.hasOutputChannel"},{"command":"tailwindCSS.sortSelection","title":"Tailwind CSS: Sort Selection","enablement":"editorHasSelection && (resourceScheme == file || resourceScheme == vscode-remote) && tailwindCSS.activeTextEditorSupportsClassSorting"}],"grammars":[{"language":"tailwindcss","scopeName":"source.css.tailwind","path":"./syntaxes/source.css.tailwind.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}},{"scopeName":"tailwindcss.at-rules.injection","path":"./syntaxes/at-rules.tmLanguage.json","injectTo":["source.css","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.at-rules.scss.injection","path":"./syntaxes/at-rules.scss.tmLanguage.json","injectTo":["source.css.scss"]},{"scopeName":"tailwindcss.at-rules.postcss.injection","path":"./syntaxes/at-rules.postcss.tmLanguage.json","injectTo":["source.css.postcss"]},{"scopeName":"tailwindcss.at-apply.injection","path":"./syntaxes/at-apply.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.theme-fn.injection","path":"./syntaxes/theme-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.screen-fn.injection","path":"./syntaxes/screen-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/node_modules/**","**/.hg/**","**/.svn/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.classAttributes":{"type":"array","items":{"type":"string"},"default":["class","className","ngClass","class:list"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.lint.recommendedVariantOrder":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."},"tailwindcss-intellisense.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Tailwind CSS Language Server."}}}},"scripts":{"_esbuild":"node ../../esbuild.mjs src/extension.ts src/server.ts src/cssServer.ts --outdir=dist","dev":"concurrently --raw --kill-others \"npm run watch\" \"npm run check -- --watch\"","watch":"npm run clean && npm run _esbuild -- --watch","build":"npm run check && npm run clean && npm run _esbuild -- --minify && move-file dist/server.js dist/tailwindServer.js && move-file dist/cssServer.js dist/tailwindModeServer.js","package":"vsce package --no-dependencies","publish":"vsce publish --no-dependencies","copy:notices":"cp ../tailwindcss-language-server/ThirdPartyNotices.txt ./dist/ThirdPartyNotices.txt","vscode:prepublish":"npm run build && npm run copy:notices","clean":"rimraf dist","check":"tsc --noEmit"},"devDependencies":{"@tailwindcss/language-server":"*","@types/braces":"3.0.1","@types/picomatch":"^2.3.3","@types/vscode":"1.65.0","@vscode/vsce":"2.21.1","braces":"3.0.3","color-name":"1.1.4","concurrently":"7.0.0","esbuild":"^0.20.2","minimist":"^1.2.8","move-file-cli":"3.0.0","normalize-path":"3.0.0","picomatch":"^4.0.1","rimraf":"3.0.2","typescript":"5.3.3","vscode-languageclient":"8.0.2"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/bradlc.vscode-tailwindcss-0.12.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Tailwind Labs","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","publisherId":"84722833-669b-4c7d-920e-b60e43fae19a","publisherDisplayName":"Tailwind Labs","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"teabyii.ayu","uuid":"5178733e-4b02-4829-95c5-1ce970847c23"},"manifest":{"name":"ayu","displayName":"Ayu","description":"A simple theme with bright colors and comes in three versions — dark, light and mirage for all day long comfortable work.","version":"1.0.5","publisher":"teabyii","license":"MIT","repository":{"type":"git","url":"https://github.com/ayu-theme/vscode-ayu"},"bugs":{"url":"https://github.com/ayu-theme/vscode-ayu/issues","email":"teabyii@gmail.com"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["icon-theme","theme","ayu"],"homepage":"https://github.com/ayu-theme/vscode-ayu","icon":"assets/logo.png","contributes":{"themes":[{"label":"Ayu Dark","uiTheme":"vs-dark","path":"./ayu-dark.json"},{"label":"Ayu Dark Bordered","uiTheme":"vs-dark","path":"./ayu-dark-bordered.json"},{"label":"Ayu Light","uiTheme":"vs","path":"./ayu-light.json"},{"label":"Ayu Light Bordered","uiTheme":"vs","path":"./ayu-light-bordered.json"},{"label":"Ayu Mirage","uiTheme":"vs-dark","path":"./ayu-mirage.json"},{"label":"Ayu Mirage Bordered","uiTheme":"vs-dark","path":"./ayu-mirage-bordered.json"}],"iconThemes":[{"id":"ayu","label":"Ayu","path":"./ayu-icons.json"}]},"scripts":{"build":"ts-node ./src/build.ts","package":"vsce package","start":"npm run build; npm run package","publish":"vsce publish"},"devDependencies":{"@types/node":"^16.6.0","ayu":"^8.0.1","ts-node":"^8.10.2","typescript":"^3.9.3","vsce":"^1.96.1"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/teabyii.ayu-1.0.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"teabyii","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"5178733e-4b02-4829-95c5-1ce970847c23","publisherId":"8a0aaf7f-34ab-48b1-9384-c15c80413d57","publisherDisplayName":"teabyii","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"christian-kohler.npm-intellisense","uuid":"dff6b801-247e-40e9-82e8-8c9b1d19d1b8"},"manifest":{"name":"npm-intellisense","displayName":"npm Intellisense","description":"Visual Studio Code plugin that autocompletes npm modules in import statements","version":"1.4.5","publisher":"christian-kohler","engines":{"vscode":"^1.0.0"},"homepage":"https://github.com/ChristianKohler/NpmIntellisense","sponsor":{"url":"https://github.com/sponsors/ChristianKohler"},"repository":{"type":"git","url":"https://github.com/ChristianKohler/NpmIntellisense.git"},"categories":["Other"],"activationEvents":["onLanguage:typescript","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescriptreact","onCommand:npm-intellisense.import"],"capabilities":{"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"npm-intellisense","properties":{"npm-intellisense.scanDevDependencies":{"type":"boolean","default":false,"description":"Scans devDependencies as well"},"npm-intellisense.recursivePackageJsonLookup":{"type":"boolean","default":true,"description":"Look for package.json inside nearest directory instead of workspace root"},"npm-intellisense.packageSubfoldersIntellisense":{"type":"boolean","default":false,"description":"(experimental) Enables path intellisense in subfolders of modules"},"npm-intellisense.showBuildInLibs":{"type":"boolean","default":false,"description":"shows build in node modules like 'path' of 'fs'"},"npm-intellisense.importES6":{"type":"boolean","default":true,"description":"For import command. Use import statements instead of require()"},"npm-intellisense.importQuotes":{"type":"string","default":"'","description":"For import command. The type of quotes to use in the snippet"},"npm-intellisense.importLinebreak":{"type":"string","default":";\r\n","description":"For import command. The linebreak used after the snippet"},"npm-intellisense.importDeclarationType":{"type":"string","default":"const","description":"For import command. The declaration type used for require()"}}},"commands":[{"command":"npm-intellisense.import","title":"NPM Intellisense: Import module"}]},"icon":"images/icon.png","main":"./out/src/extension","scripts":{"vscode:prepublish":"tsc","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/mocha":"^9.0.0","@types/node":"^14.17.34","@types/vscode":"^1.0.0","glob":"^7.2.0","mocha":"^9.1.3","typescript":"^4.5.2","vscode-test":"^1.6.1"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/christian-kohler.npm-intellisense-1.4.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Christian Kohler","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"dff6b801-247e-40e9-82e8-8c9b1d19d1b8","publisherId":"a892fb38-060b-475f-9e73-2e06a8a17a68","publisherDisplayName":"Christian Kohler","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"be5invis.vscode-custom-css","uuid":"1b160753-ae5e-42bb-82ad-d115ce5c10f4"},"manifest":{"name":"vscode-custom-css","displayName":"Custom CSS and JS Loader","description":"Custom CSS and JS for Visual Studio Code","version":"7.2.2","publisher":"be5invis","author":{"email":"belleve@typeof.net","name":"Belleve Invis","url":"https://typeof.net"},"engines":{"vscode":"^1.70.0"},"categories":["Other","Themes"],"repository":{"type":"git","url":"https://github.com/be5invis/vscode-custom-css"},"bugs":{"url":"https://github.com/be5invis/vscode-custom-css/issues"},"preview":true,"icon":"images/logo.png","galleryBanner":{"color":"#EEEEEE"},"activationEvents":["*"],"main":"./src/extension","contributes":{"commands":[{"command":"extension.installCustomCSS","title":"Enable Custom CSS and JS"},{"command":"extension.uninstallCustomCSS","title":"Disable Custom CSS and JS"},{"command":"extension.updateCustomCSS","title":"Reload Custom CSS and JS"}],"configuration":{"title":"Custom CSS/JS Configuration","properties":{"vscode_custom_css.imports":{"description":"Custom CSS/JS files, as an array of URLs, not file paths","type":"array","default":[]},"vscode_custom_css.statusbar":{"description":"Enable Status Indicator","type":"boolean","default":true}}}},"devDependencies":{"eslint":"^8.21.0","eslint-config-prettier":"^8.5.0"},"dependencies":{"file-url":"^3.0.0","node-fetch":"^2.0.0","uuid":"^8.3.2"},"extensionKind":["ui"],"scripts":{"vscode:prepublish":"npx -y rimraf node_modules && npm install --prod"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/be5invis.vscode-custom-css-7.2.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"be5invis","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"1b160753-ae5e-42bb-82ad-d115ce5c10f4","publisherId":"8c148d69-cbc6-480b-bd8b-a42715926324","publisherDisplayName":"be5invis","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.27.3","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["onStartupFinished","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]","pattern":"^(.:.)?(,.:.)*$"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1,"maximum":10000},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VS Code to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":["#005f5f","#ffffff"]},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":["#5f0000","#ffffff"]},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":["#5f00af","#ffffff"]},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":["#005f87","#ffffff"]},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":["#86592d","#ffffff"]},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":["#00000","#ffffff"]},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":["#007acc","#ffffff"]},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `#vim.neovimConfigPath#`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `#vim.neovimUseConfigFile#` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"Vimscript","extensions":[".vim",".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"Vimscript","scopeName":"source.vimscript","path":"./syntaxes/vimscript.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"eslint .","lint:fix":"eslint . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky install"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"5.1.0","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.2.1","@types/diff-match-patch":"1.0.36","@types/glob":"8.1.0","@types/lodash":"4.17.4","@types/mocha":"10.0.6","@types/node":"18.19.33","@types/parsimmon":"1.10.9","@types/sinon":"17.0.3","@types/vscode":"1.74.0","@typescript-eslint/eslint-plugin":"^7.0.0","@typescript-eslint/parser":"^7.0.0","@vscode/test-electron":"2.3.10","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","eslint":"^8.52.0","eslint-config-prettier":"^9.0.0","eslint-plugin-jsdoc":"^48.0.0","eslint-plugin-prefer-arrow":"^1.2.3","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"9.0.2","gulp":"5.0.0","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^9.0.0","lint-staged":"^15.0.0","minimist":"1.2.8","mocha":"10.4.0","plugin-error":"2.0.1","prettier":"3.2.5","sinon":"18.0.0","ts-loader":"9.5.1","typescript":"5.4.5","vsce":"2.15.0","webpack":"5.91.0","webpack-cli":"5.1.4","webpack-merge":"5.10.0","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.ts":"eslint --fix"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/vscodevim.vim-1.27.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vscodevim","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"htmlhint.vscode-htmlhint","uuid":"d0a9daff-de6d-4669-a30b-14a49a1a17e0"},"manifest":{"name":"vscode-htmlhint","displayName":"HTMLHint","description":"VS Code integration for HTMLHint - A Static Code Analysis Tool for HTML","icon":"images/icon.png","version":"1.0.5","publisher":"HTMLHint","galleryBanner":{"color":"#333333","theme":"dark"},"sponsor":{"url":"https://opencollective.com/htmlhint"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/htmlhint/vscode-htmlhint/issues"},"homepage":"https://github.com/htmlhint/vscode-htmlhint/blob/main/README.md","repository":{"type":"git","url":"https://github.com/htmlhint/vscode-htmlhint.git"},"categories":["Programming Languages","Linters"],"engines":{"vscode":"^1.16.0"},"activationEvents":["onFileSystem:file"],"main":"./out/extension","contributes":{"configuration":{"type":"object","title":"HTMLHint","properties":{"htmlhint.enable":{"type":"boolean","default":true,"description":"Control whether HTMLHint is enabled for HTML files or not."},"htmlhint.documentSelector":{"type":"array","default":["html","htm"],"description":"The associated document types to be linted."},"htmlhint.options":{"type":"object","default":{},"description":"The HTMLHint options object to provide args to the HTMLHint command."}}}},"scripts":{"vscode:prepublish":"node ./node_modules/typescript/bin/tsc -p ./","compile":"node ./node_modules/typescript/bin/tsc -p ./","watch":"node ./node_modules/typescript/bin/tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"2.9.2","vscode":"1.1.37","@types/node":"6.0.118"},"dependencies":{"vscode-languageclient":"3.5.1"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/htmlhint.vscode-htmlhint-1.0.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"HTMLHint","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"d0a9daff-de6d-4669-a30b-14a49a1a17e0","publisherId":"7949a56e-967f-40b4-8d27-cb254f939acb","publisherDisplayName":"HTMLHint","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"searking.preview-vscode","uuid":"03e014a0-a915-4672-92b3-77e5a6ad72df"},"manifest":{"name":"preview-vscode","displayName":"Preview","description":"A Markdown, ReStructured Text, HTML, Jade, Pug, Mermaid, Image previewer.","version":"2.3.7","icon":"media/icon.png","publisher":"searKing","author":"Haixin Chen","readme":"README.md","repository":{"type":"git","url":"https://github.com/searKing/preview-vscode"},"galleryBanner":{"color":"#78d6f0","theme":"light"},"bugs":"https://github.com/searKing/preview-vscode/issues","homepage":"https://github.com/searKing/preview-vscode/blob/master/README.md","engines":{"vscode":"^1.88.0"},"categories":["Other","Programming Languages"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"main":"./dist/extension/node/extension.js","browser":"./dist/extension/browser/extension.js","activationEvents":["onLanguage:markdown","onLanguage:html","onLanguage:css","onLanguage:mermaid","onLanguage:restructuredtext","onLanguage:jade","onCommand:markdown.api.render","onCommand:markdown.api.reloadPlugins","onWebviewPanel:markdown.preview"],"contributes":{"languages":[{"id":"mermaid","aliases":["Mermaid","Mermaid Flowchart"],"extensions":[".mmd",".mermaid"]}],"notebookRenderer":[{"id":"preview-vscode.markdown-it-renderer","displayName":"Preview","entrypoint":{"extends":"vscode.markdown-it-renderer","path":"./dist/notebook/notebook.js"},"mimeTypes":["text/markdown"]}],"commands":[{"command":"preview-vscode.showPreview","title":"Open Preview","category":"Preview","icon":{"light":"./media/preview-light.svg","dark":"./media/preview-dark.svg"}},{"command":"preview-vscode.showPreviewToSide","title":"Open Preview to the Side","category":"Preview","icon":"$(open-preview)"},{"command":"preview-vscode.showLockedPreviewToSide","title":"Open Locked Preview to the Side","category":"Preview","icon":"$(open-preview)"}],"menus":{"editor/title":[{"command":"preview-vscode.showPreviewToSide","when":"(editorLangId != 'markdown') && !notebookEditorFocused && !hasCustomMarkdownPreview","alt":"preview-vscode.showPreview","group":"navigation"}],"explorer/context":[{"command":"preview-vscode.showPreview","when":"(resourceLangId == 'html' || resourceLangId == 'mermaid' || resourceLangId == 'restructuredtext' || resourceLangId == 'pug' || resourceLangId == 'jade') && !hasCustomMarkdownPreview","group":"navigation"}],"editor/title/context":[{"command":"preview-vscode.showPreview","when":"(resourceLangId != 'markdown') && !hasCustomMarkdownPreview","group":"1_open"}],"commandPalette":[{"command":"preview-vscode.showPreview","when":"(editorLangId != 'markdown') && !notebookEditorFocused","group":"navigation"},{"command":"preview-vscode.showPreviewToSide","when":"(editorLangId != 'markdown') && !notebookEditorFocused","group":"navigation"},{"command":"preview-vscode.showLockedPreviewToSide","when":"(editorLangId != 'markdown') && !notebookEditorFocused","group":"navigation"}]},"markdown.markdownItPlugins":true,"markdown.previewStyles":["./preview-styles/index.css"],"keybindings":[{"command":"preview-vscode.showPreview","key":"shift+ctrl+v","mac":"shift+cmd+v","when":"(editorTextFocus || (explorerViewletVisible && filesExplorerFocus)) && editorLangId != markdown && !notebookEditorFocused"},{"command":"preview-vscode.showPreviewToSide","key":"ctrl+k v","mac":"cmd+k v","when":"(editorTextFocus || (explorerViewletVisible && filesExplorerFocus)) && editorLangId != markdown && !notebookEditorFocused"}],"configuration":[{"title":"Preview","properties":{"markdown.abbr.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Abbreviation (<abbr>) tag in the built-in Markdown preview."},"markdown.anchor.enabled":{"type":"boolean","default":true,"description":"Enable/disable adding an id attribute (#id) to headings in the built-in Markdown preview."},"markdown.anchor.level":{"type":"integer","default":1,"description":"Minimum level to apply anchors.","scope":"resource"},"markdown.attrs.enabled":{"type":"boolean","default":true,"description":"Enable/disable adding classes (.class), identifiers (#id) and attributes (name=\"value\") in the built-in Markdown preview."},"markdown.attrs.allowedAttributes":{"type":"array","items":{"type":"string"},"default":[],"description":"allowed attributes, empty array as all attributes are allowed, Now only id, class and attributes beginning with regex are allowed, such as /^regex.*$/.","scope":"resource"},"markdown.bracketed-spans.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Span (<span>) tag  in the built-in Markdown preview."},"markdown.cjk-breaks.enabled":{"type":"boolean","default":true,"description":"Enable/disable suppressing linebreaks between east asian characters in the built-in Markdown preview."},"markdown.code-copy.enabled":{"type":"boolean","default":true,"description":"Enable/disable adding a copy icon in code blocks to copy the code. in the built-in Markdown preview."},"markdown.deflist.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Definition list (<dl>) tag in the built-in Markdown preview."},"markdown.emoji.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering emoji & emoticon & emoticons shortcuts in the built-in Markdown preview."},"markdown.expand-tabs.enabled":{"type":"boolean","default":true,"description":"Enable/disable replaceing leading tabs with spaces in fenced code blocks in the built-in Markdown preview."},"markdown.expand-tabs.tabWidth":{"type":"integer","default":2,"description":"Specify the number of spaces per indentation-level to be replaced.","scope":"resource"},"markdown.footnote.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering footnode in the built-in Markdown preview."},"markdown.highlightjs.enabled":{"type":"boolean","default":true,"description":"Enable/disable highlight code blocks in the built-in Markdown preview."},"markdown.highlightjs.auto":{"type":"boolean","default":true,"description":"Whether to automatically detect language if not specified.","scope":"resource"},"markdown.highlightjs.code":{"type":"boolean","default":true,"description":"Whether to add the hljs class to raw code blocks (not fenced code blocks).","scope":"resource"},"markdown.highlightjs.inline":{"type":"boolean","default":true,"description":"Whether to highlight inline code.","scope":"resource"},"markdown.highlightjs.ignoreIllegals":{"type":"boolean","default":true,"description":"Forces highlighting to finish even in case of detecting illegal syntax for the language instead of throwing an exception.","scope":"resource"},"markdown.html.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering ”HTML“ inside fenced code blocks in the built-in Markdown preview."},"markdown.ins.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Inserted (<ins>) tag in the built-in Markdown preview."},"markdown.lazy-headers.enabled":{"type":"boolean","default":true,"description":"Enable/disable relaxing the syntax of ATX headers so that you don't have to follow the opening sequence of # characters by a space in the built-in Markdown preview.","scope":"resource"},"markdown.mark.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Mark (<mark>) tag in the built-in Markdown preview."},"markdown.markdown.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering ”Markdown“ inside fenced code blocks in the built-in Markdown preview."},"markdown.mermaid.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering ”Mermaid“ inside fenced code blocks in the built-in Markdown preview."},"markdown.mermaid.theme":{"type":"string","default":"auto","description":"Mermaid Flowchart Theme.","scope":"resource","enum":["auto","default","forest","dark","neutral","null"],"enumDescriptions":["Instructs to listen to changes to the OS's color scheme and switch to a matching theme accordingly.","default light color theme.","forest color theme.","dark color theme.","neutral color theme.","Can be set to disable any pre-defined mermaid theme."]},"markdown.pug.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering ”Pug/Jade“ inside fenced code blocks in the built-in Markdown preview."},"markdown.rst.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering ”reStructuredText“ inside fenced code blocks in the built-in Markdown preview."},"markdown.sub.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Abbreviation (<sub>) tag in the built-in Markdown preview."},"markdown.sup.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering Superscript (<sup>) tag in the built-in Markdown preview."},"markdown.tasklists.enabled":{"type":"boolean","default":true,"description":"Enable/disable rendering GitHub-style task lists in the built-in Markdown preview."},"markdown.tasklists.renderCheckboxes":{"type":"boolean","default":true,"description":"Render checkboxe.","scope":"resource"},"markdown.tasklists.label":{"type":"boolean","default":true,"description":"Wrap the rendered list items in a <label> element for UX purposes.","scope":"resource"},"markdown.tasklists.labelAfter":{"type":"boolean","default":true,"description":"Add the <label> after the checkbox.","scope":"resource"}}}]},"scripts":{"dist:stable":"vsce package","dist":"vsce package --pre-release","vscode:prepublish":"npm run package","compile":"webpack --mode development --stats-error-details","watch":"webpack --mode development --stats-error-details --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir dist","watch-tests":"tsc -p . -w --outDir dist","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","test":"vscode-test"},"devDependencies":{"@types/markdown-it":"^14.0.1","@types/mocha":"^10.0.6","@types/node":"^20.12.7","@types/pug":"^2.0.10","@types/vscode":"^1.88.0","@types/vscode-notebook-renderer":"^1.57.8","@types/webpack-env":"^1.18.4","@typescript-eslint/eslint-plugin":"^7.7.1","@typescript-eslint/parser":"^7.7.1","@vscode/test-cli":"^0.0.9","@vscode/test-electron":"^2.3.9","entity-decode":"^2.0.2","eslint":"^8.56.0","fork-ts-checker-webpack-plugin":"^9.0.2","highlight.js":"^11.9.0","html-webpack-plugin":"^5.6.0","markdown-it-abbr":"^2.0.0","markdown-it-anchor":"^8.6.7","markdown-it-attrs":"^4.1.6","markdown-it-bracketed-spans":"^1.0.1","@searking/markdown-it-cjk-breaks":"^2.0.1-0","markdown-it-container":"^4.0.0","markdown-it-deflist":"^3.0.0","markdown-it-emoji":"^3.0.0","markdown-it-expand-tabs":"^1.0.12","markdown-it-footnote":"^4.0.0","markdown-it-front-matter":"^0.2.4","markdown-it-highlightjs":"^4.0.1","markdown-it-ins":"^4.0.0","markdown-it-lazy-headers":"^0.1.3","markdown-it-mark":"^4.0.0","markdown-it-sub":"^2.0.0","markdown-it-sup":"^2.0.0","markdown-it-task-lists":"^2.1.0","mermaid":"^10.0.9","node-polyfill-webpack-plugin":"^3.0.0","path":"^0.12.7","pug":"^3.0.2","rst2mdown":"^0.1.0","ts-loader":"^9.5.1","typescript":"^5.4.5","vscode-notebook-error-overlay":"^1.0.1","webpack":"^5.91.0","webpack-cli":"^5.1.4"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/searking.preview-vscode-2.3.7","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Haixin Chen","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"03e014a0-a915-4672-92b3-77e5a6ad72df","publisherId":"ad4b4a51-ddda-46ca-be95-1f009d9f031f","publisherDisplayName":"Haixin Chen","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"esbenp.prettier-vscode","uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90"},"manifest":{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"10.4.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.60.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install && cd ../plugin-tailwindcss && npm i && cd ../v3-plugins && npm i && cd ../v3-plugin-override && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack && cp -r ./src/worker ./out","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","postinstall":"husky install","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/mocha":"^10.0.6","@types/node":"20.11.30","@types/prettier":"^2.7.2","@types/resolve":"^1.20.3","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/vscode":"^1.60.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.52","copy-webpack-plugin":"^12.0.2","eslint":"^8.31.0","eslint-config-prettier":"^9.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","husky":"^9.0.11","lint-staged":"^15.2.2","mocha":"^10.3.0","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^17.0.1","tmp":"^0.2.3","ts-loader":"^9.5.1","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.4","webpack":"^5.91.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.8","semver":"^7.6.0","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not. Reload required.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"language-overridable"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"language-overridable"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"language-overridable"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"language-overridable"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"language-overridable"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"language-overridable"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"language-overridable"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"language-overridable"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"language-overridable"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"language-overridable"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"language-overridable"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"language-overridable"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"language-overridable"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"language-overridable"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"language-overridable"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"language-overridable"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"language-overridable"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"language-overridable"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"language-overridable"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"language-overridable"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/esbenp.prettier-vscode-10.4.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Prettier","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","publisherId":"d16f4e39-2ffb-44e3-9c0d-79d873570e3a","publisherDisplayName":"Prettier","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"formulahendry.code-runner","uuid":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3"},"manifest":{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA, Less, Fortran, Ring, Standard ML, Zig, Mojo, Erlang, SPWN, Pkl, Gleam","version":"0.12.2","featureFlags":{"usingNewPythonInterpreterPathApi":true,"usingNewPythonInterpreterPathApiV2":true},"publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.56.0"},"categories":["Programming Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"sponsor":{"url":"https://www.patreon.com/junhan"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage","onStartupFinished"],"main":"./out/src/extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":"$(play)"},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run","icon":"$(debug-stop)"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput && !config.code-runner.runInTerminal","command":"code-runner.stop","group":"stop-code-run"}],"editor/title/run":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"editor/title":[{"when":"config.code-runner.showStopIconInEditorTitleMenu && code-runner.codeRunning","command":"code-runner.stop","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder && config.code-runner.showRunCommandInExplorerContextMenu","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMapByGlob":{"type":"object","default":{"pom.xml":"cd $dir && mvn clean package"},"description":"Set the executor by glob.","scope":"resource"},"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","zig":"zig run","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python -u","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","scheme":"csi -script","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runghc","nim":"nim compile --verbosity:0 --hints:off --run","lisp":"sbcl --script","kit":"kitc --run","v":"v run","sass":"sass --style expanded","scss":"scss --style expanded","less":"cd $dir && lessc $fileName $fileNameWithoutExt.css","FortranFreeForm":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran-modern":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran_fixed-form":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","sml":"cd $dir && sml $fileName","mojo":"mojo run","erlang":"escript","spwn":"spwn build","pkl":"cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml","gleam":"gleam run -m $fileNameWithoutExt"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".zig":"zig run",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".scm":"csi -script",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project",".lisp":"sbcl --script",".kit":"kitc --run",".v":"v run",".vsh":"v run",".sass":"sass --style expanded",".cu":"cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",".ring":"ring",".sml":"cd $dir && sml $fileName",".mojo":"mojo run",".erl":"escript",".spwn":"spwn build",".pkl":"cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",".gleam":"gleam run -m $fileNameWithoutExt"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showStopIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Stop code run' icon in the editor title menu when code is running.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.showRunCommandInExplorerContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in explorer context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","micromatch":"^4.0.2","tree-kill":"^1.2.2"},"devDependencies":{"@types/micromatch":"^3.1.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","@types/vscode":"^1.56.0","mocha":"^6.1.4","tslint":"^5.5.0","typescript":"^3.8.3"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/formulahendry.code-runner-0.12.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Jun Han","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3","publisherId":"38bbe3f0-5204-4170-845e-c2f966d979b8","publisherDisplayName":"Jun Han","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"formulahendry.auto-rename-tag","uuid":"6e440e71-8ed9-4f25-bb78-4b13096b8a03"},"manifest":{"name":"auto-rename-tag","displayName":"Auto Rename Tag","description":"Auto rename paired HTML/XML tag","version":"0.1.10","publisher":"formulahendry","license":"MIT","icon":"images/logo.png","engines":{"vscode":"^1.41.1"},"categories":["Other","Programming Languages"],"keywords":["AutoComplete","rename","tag","html","xml","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-auto-rename-tag/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-auto-rename-tag/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-auto-rename-tag.git"},"activationEvents":["*"],"main":"./packages/extension/dist/extensionMain.js","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"configuration":{"type":"object","title":"Auto Rename Tag configuration","properties":{"auto-rename-tag.activationOnLanguage":{"type":"array","default":["*"],"description":"Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"] By default, it is [\"*\"] and will be activated for all languages.","scope":"resource"}}}},"extensionKind":["ui","workspace"]},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/formulahendry.auto-rename-tag-0.1.10","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Jun Han","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"6e440e71-8ed9-4f25-bb78-4b13096b8a03","publisherId":"38bbe3f0-5204-4170-845e-c2f966d979b8","publisherDisplayName":"Jun Han","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"formulahendry.auto-close-tag","uuid":"d3836729-9cc1-42c1-b2af-d50071f57d29"},"manifest":{"name":"auto-close-tag","displayName":"Auto Close Tag","description":"Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text","version":"0.5.15","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.49.0"},"categories":["Other","Programming Languages"],"keywords":["AutoComplete","close","tag","html","xml","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-auto-close-tag/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-auto-close-tag/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-auto-close-tag.git"},"extensionKind":["ui","workspace"],"activationEvents":["*","onCommand:auto-close-tag.closeTag"],"main":"./out/src/extension","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"auto-close-tag.closeTag","title":"Close Tag"}],"keybindings":[{"command":"auto-close-tag.closeTag","key":"alt+.","mac":"cmd+alt+."}],"configuration":{"type":"object","title":"Auto Close Tag configuration","properties":{"auto-close-tag.activationOnLanguage":{"type":"array","default":["xml","php","blade","ejs","jinja","javascript","javascriptreact","typescript","typescriptreact","plaintext","markdown","vue","liquid","erb","lang-cfml","cfml","HTML (EEx)","HTML (Eex)","plist"],"description":"Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"]. Use [\"*\"] to activate for all languages.","scope":"resource"},"auto-close-tag.disableOnLanguage":{"type":"array","default":[],"description":"Set the languages where the extension will be disabled.  e.g. [\"html\",\"xml\",\"php\"].","scope":"resource"},"auto-close-tag.excludedTags":{"type":"array","default":["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],"description":"Set the tag list that would not be auto closed.","scope":"resource"},"auto-close-tag.SublimeText3Mode":{"type":"boolean","default":false,"description":"Auto close tag when </ is typed, same as Sublime Text 3","scope":"resource"},"auto-close-tag.enableAutoCloseTag":{"type":"boolean","default":true,"description":"Whether to insert close tag automatically","scope":"resource"},"auto-close-tag.enableAutoCloseSelfClosingTag":{"type":"boolean","default":true,"description":"Whether to close self-closing tag automatically","scope":"resource"},"auto-close-tag.insertSpaceBeforeSelfClosingTag":{"type":"boolean","default":false,"description":"Insert a space before the forward slash in a self-closing tag.","scope":"resource"},"auto-close-tag.fullMode":{"type":"boolean","default":false,"description":"Enable both Visual Studio and Sublime Text mode","scope":"resource"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","@types/vscode":"^1.49.0","mocha":"^2.3.3","typescript":"^3.9.10"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/formulahendry.auto-close-tag-0.5.15","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Jun Han","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"d3836729-9cc1-42c1-b2af-d50071f57d29","publisherId":"38bbe3f0-5204-4170-845e-c2f966d979b8","publisherDisplayName":"Jun Han","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"streetsidesoftware.code-spell-checker","uuid":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7"},"manifest":{"name":"code-spell-checker","description":"Spelling checker for source code","displayName":"Code Spell Checker","icon":"images/SpellCheck.png","author":"Jason Dent","license":"GPL-3.0-or-later","version":"3.0.1","publisher":"streetsidesoftware","private":true,"repository":{"type":"git","url":"https://github.com/streetsidesoftware/vscode-spell-checker"},"bugs":{"url":"https://github.com/streetsidesoftware/vscode-spell-checker/issues"},"homepage":"https://streetsidesoftware.github.io/vscode-spell-checker","engines":{"node":">16.0.0","vscode":"^1.80.0"},"sponsor":{"url":"https://github.com/sponsors/streetsidesoftware"},"extensionKind":["workspace"],"categories":["Linters","Other"],"keywords":["spell","checker","spelling","spellchecker","multi-root ready"],"qna":"marketplace","activationEvents":["onStartupFinished"],"type":"commonjs","main":"./packages/client/dist/extension.js","contributes":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false},"menus":{"editor/context":[{"command":"cSpell.suggestSpellingCorrections","when":"!editorReadonly && editorTextFocus && config.cSpell.showSuggestionsLinkInEditorContextMenu && cSpell.editorMenuContext.showSuggestions","group":"A_cspell@000"},{"submenu":"cSpell.spelling","group":"A_cspell@001","when":"!editorReadonly && editorTextFocus && config.cSpell.showCommandsInEditorContextMenu"}],"cSpell.spelling":[{"command":"cSpell.suggestSpellingCorrections","when":"editorTextFocus && !config.cSpell.showSuggestionsLinkInEditorContextMenu && cSpell.editorMenuContext.showSuggestions","group":"A_cspell@001"},{"command":"cSpell.addWordToDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToDictionary","group":"A_cspell@010"},{"command":"cSpell.addWordToFolderDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToFolderDictionary","group":"A_cspell@020"},{"command":"cSpell.addWordToWorkspaceDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToWorkspaceDictionary","group":"A_cspell@030"},{"command":"cSpell.addWordToCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.addWordToCSpellConfig","group":"A_cspell@050"},{"command":"cSpell.addWordToFolderSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToFolderSettings","group":"A_cspell@051"},{"command":"cSpell.addWordToWorkspaceSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToWorkspaceSettings","group":"A_cspell@052"},{"command":"cSpell.addWordToUserDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToUserDictionary","group":"A_cspell@055"},{"command":"cSpell.addWordToUserSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToUserSettings","group":"A_cspell@056"},{"command":"cSpell.addIssuesToDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addIssuesToDictionary","group":"A_cspell@060"},{"command":"cSpell.addIgnoreWord","when":"editorTextFocus && cSpell.editorMenuContext.addIgnoreWord","group":"A_cspell@090"},{"command":"cSpell.createCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.createCSpellConfig","group":"B_cspell@010"},{"command":"cSpell.createCustomDictionary","when":"editorTextFocus && cSpell.editorMenuContext.createCustomDictionary","group":"B_cspell@020"}],"cSpell.configMenu":[{"command":"cSpell.createCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.createCSpellConfig","group":"A_cspell@010"},{"command":"cSpell.createCustomDictionary","when":"editorTextFocus && cSpell.editorMenuContext.createCustomDictionary","group":"A_cspell@070"}],"commandPalette":[{"command":"cSpellRegExpTester.testRegExp","when":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpellRegExpTester.editRegExp","when":"view == cSpellRegExpView"}],"view/item/context":[{"command":"cSpellRegExpTester.editRegExp","when":"view == cSpellRegExpView && viewItem == regexp","group":"inline"}]},"submenus":[{"id":"cSpell.spelling","label":"Spelling"},{"id":"cSpell.configMenu","label":"Spell Checker Configuration"}],"viewsContainers":{"activitybar":[{"id":"cspell-explorer","title":"Spell Checker Info","icon":"resources/dark/check_circle.svg","when":"config.cSpell.experimental.enableRegexpView"}]},"views":{"cspell-explorer":[{"id":"cSpellRegExpView","name":"Regular Expressions","when":"config.cSpell.experimental.enableRegexpView"}]},"commands":[{"command":"cSpell.coding.start","title":"Start coding session","enablement":"config.cSpell.experimental.enableSettingsViewerV2","category":"Spell"},{"command":"cSpell.coding.doRefactor","title":"Do some refactoring","enablement":"config.cSpell.experimental.enableSettingsViewerV2","category":"Spell"},{"command":"cSpell.addWordToWorkspaceDictionary","category":"Spell","title":"Add Words to Workspace Dictionary"},{"command":"cSpell.addWordToFolderDictionary","category":"Spell","title":"Add Words to Folder Dictionary"},{"command":"cSpell.addWordToUserDictionary","category":"Spell","title":"Add Words to User Dictionary"},{"command":"cSpell.addWordToWorkspaceSettings","category":"Spell","title":"Add Words to Workspace Settings"},{"command":"cSpell.addWordToFolderSettings","category":"Spell","title":"Add Words to Folder Settings"},{"command":"cSpell.addWordToUserSettings","category":"Spell","title":"Add Words to User Settings"},{"command":"cSpell.enableForWorkspace","category":"Spell","title":"Enable Spell Checking For Workspace"},{"command":"cSpell.disableForWorkspace","category":"Spell","title":"Disable Spell Checking For Workspace"},{"command":"cSpell.enableForGlobal","category":"Spell","title":"Enable Spell Checking by Default"},{"command":"cSpell.disableForGlobal","category":"Spell","title":"Disable Spell Checking by Default"},{"command":"cSpell.enableCurrentLanguage","category":"Spell","title":"Enable Spell Checking Document Language"},{"command":"cSpell.disableCurrentLanguage","category":"Spell","title":"Disable Spell Checking Document Language"},{"command":"cSpell.displayCSpellInfo","category":"Spell","title":"Show Spell Checker Configuration Info"},{"command":"cSpell.toggleEnableForGlobal","category":"Spell","title":"Toggle Spell Checking in User Settings"},{"command":"cSpell.toggleEnableForWorkspace","category":"Spell","title":"Toggle Spell Checking for Workspace"},{"command":"cSpell.toggleEnableSpellChecker","category":"Spell","title":"Toggle Spell Checking"},{"command":"cSpell.removeWordFromFolderDictionary","category":"Spell","title":"Remove Words from the Folder Dictionary"},{"command":"cSpell.removeWordFromWorkspaceDictionary","category":"Spell","title":"Remove Words from the Workspace Dictionaries"},{"command":"cSpell.removeWordFromUserDictionary","category":"Spell","title":"Remove Words from the Global Dictionary"},{"command":"cSpell.logPerfTimeline","category":"Spell","title":"Log CSpell performance times to console"},{"command":"cSpell.addIgnoreWord","category":"Spell","title":"Ignore Words"},{"command":"cSpell.addIgnoreWordsToFolder","category":"Spell","title":"Ignore Word in Folder Settings"},{"command":"cSpell.addIgnoreWordsToWorkspace","category":"Spell","title":"Ignore Words in Workspace Settings"},{"command":"cSpell.addIgnoreWordsToUser","category":"Spell","title":"Ignore Words in User Settings"},{"command":"cSpell.addWordToDictionary","category":"Spell","title":"Add Words to Dictionary"},{"command":"cSpell.addWordToCSpellConfig","category":"Spell","title":"Add Words to CSpell Configuration"},{"command":"cSpell.addIssuesToDictionary","category":"Spell","title":"Add All Spelling Issues to Dictionary"},{"command":"cSpell.createCustomDictionary","category":"Spell","title":"Create a Custom Dictionary File."},{"command":"cSpell.createCSpellConfig","category":"Spell","title":"Create a CSpell Configuration File."},{"command":"cSpell.suggestSpellingCorrections","enablement":"editorTextFocus && cSpell.editorMenuContext.showSuggestions","category":"Spell","title":"Spelling Suggestions..."},{"command":"cSpell.goToNextSpellingIssue","category":"Spell","title":"Go to Next Spelling Issue"},{"command":"cSpell.goToPreviousSpellingIssue","category":"Spell","title":"Go to Previous Spelling Issue"},{"command":"cSpell.goToNextSpellingIssueAndSuggest","category":"Spell","title":"Go to Next Spelling Issue and Suggest"},{"command":"cSpell.goToPreviousSpellingIssueAndSuggest","category":"Spell","title":"Go to Previous Spelling Issue and Suggest"},{"command":"cSpellRegExpTester.testRegExp","title":"Test a Regular Expression on the current document."},{"command":"cSpellRegExpTester.editRegExp","title":"Edit","icon":"$(edit)"}],"languages":[{"id":"jsonc","extensions":["cspell-ext.json","cspell-default.json","cspell.json","cspell.config.json","cSpell.json"]}],"jsonValidation":[{"fileMatch":[".cspell.config.json",".cspell.config.jsonc",".cspell.json",".cspell.jsonc","cspell-default.json","cspell-ext.json","cspell-import.json","cspell-imports.json","cspell-include.json","cspell-includes.json","cspell.config.json","cspell.config.jsonc","cspell.json","cspell.jsonc","cSpell.json"],"url":"./node_modules/@cspell/cspell-types/cspell.schema.json"}],"configurationDefaults":{"[markdown]":{"cSpell.fixSpellingWithRenameProvider":true,"cSpell.advanced.feature.useReferenceProviderWithRename":true,"cSpell.advanced.feature.useReferenceProviderRemove":"/^#+\\s/"},"[scss]":{"cSpell.fixSpellingWithRenameProvider":false},"[css]":{"cSpell.fixSpellingWithRenameProvider":false},"[scminput]":{"cSpell.fixSpellingWithRenameProvider":false}},"configuration":[{"additionalProperties":false,"order":0,"properties":{"cSpell.enabled":{"default":true,"markdownDescription":"Enable / Disable the spell checker.","scope":"resource","type":"boolean"}},"title":"Code Spell Checker","type":"object"},{"additionalProperties":false,"order":18,"properties":{"cSpell.advanced.feature.useReferenceProviderRemove":{"markdownDescription":"Used to work around bugs in Reference Providers and Rename Providers.\nAnything matching the provided Regular Expression will be removed from the text\nbefore sending it to the Rename Provider.\n\nSee: [Markdown: Fixing spelling issues in Header sections changes the entire line · Issue #1987](https://github.com/streetsidesoftware/vscode-spell-checker/issues/1987)\n\nIt is unlikely that you would need to edit this setting. If you need to, please open an issue at\n[Spell Checker Issues](https://github.com/streetsidesoftware/vscode-spell-checker/issues)\n\nThis feature is used in connection with `#cSpell.advanced.feature.useReferenceProviderWithRename#`","scope":"language-overridable","title":"Remove Matching Characters Before Rename","type":"string"},"cSpell.advanced.feature.useReferenceProviderWithRename":{"default":false,"markdownDescription":"Use the Reference Provider when fixing spelling issues with the Rename Provider.\nThis feature is used in connection with `#cSpell.fixSpellingWithRenameProvider#`","scope":"language-overridable","title":"Use Reference Provider During Rename","type":"boolean"},"cSpell.fixSpellingWithRenameProvider":{"default":true,"markdownDescription":"Use Rename Provider when fixing spelling issues.","scope":"language-overridable","type":"boolean"},"cSpell.logFile":{"markdownDescription":"Have the logs written to a file instead of to VS Code.","scope":"window","title":"Write Logs to a File","type":"string"},"cSpell.logLevel":{"default":"Error","enum":["None","Error","Warning","Information","Debug"],"enumDescriptions":["Do not log","Log only errors","Log errors and warnings","Log errors, warnings, and info","Log everything (noisy)"],"markdownDescription":"Set the Debug Level for logging messages.","scope":"window","title":"Set Logging Level","type":"string"}},"title":"Advanced","type":"object"},{"additionalProperties":false,"order":5,"properties":{"cSpell.ignoreRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expressions or Pattern names (defined in `#cSpell.patterns#`) to exclude from spell checking.\n\n- When using the VS Code Preferences UI, it is not necessary to escape the `\\`, VS Code takes care of that.\n- When editing the VS Code `settings.json` file,\n  it is necessary to escape `\\`.\n  Each `\\` becomes `\\\\`.\n\nThe default regular expression flags are `gi`. Add `u` (`gui`), to enable Unicode.\n\n| VS Code UI          | JSON                  | Description                                  |\n| :------------------ | :-------------------- | :------------------------------------------- |\n| `/\\\\[a-z]+/gi`      | `/\\\\\\\\[a-z]+/gi`      | Exclude LaTeX command like `\\mapsto`         |\n| `/\\b[A-Z]{3,5}\\b/g` | `/\\\\b[A-Z]{3,5}\\\\b/g` | Exclude full-caps acronyms of 3-5 length.    |\n| `CStyleComment`     | `CStyleComment`       | A built in pattern                           |","scope":"resource","type":"array"},"cSpell.includeRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.","scope":"resource","type":"array"},"cSpell.overrides":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking. See [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define additional available dictionaries.","scope":"resource","type":"array"},"enableFiletypes":{"items":{"markdownDescription":"This can be '*', 'typescript', 'cpp', 'json', etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThese are in additional to the file types specified by `cSpell.enabledLanguageIds`.\n\nTo disable a language, prefix with `!` as in `!json`,\n\nExample:\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```","scope":"resource","title":"File Types to Check","type":"array","uniqueItems":true},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"enabledLanguageIds":{"items":{"markdownDescription":"This can be '*', 'typescript', 'cpp', 'json', etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"languageIds for the files to spell check.","type":"array"},"filename":{"anyOf":[{"markdownDescription":"These are glob expressions.","type":"string"},{"items":{"markdownDescription":"These are glob expressions.","type":"string"},"type":"array"}],"markdownDescription":"Glob pattern or patterns to match against."},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"language":{"markdownDescription":"Sets the locale.","type":"string"},"languageId":{"anyOf":[{"markdownDescription":"This can be '*', 'typescript', 'cpp', 'json', etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"This can be 'typescript,cpp,json,literal haskell', etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"This can be 'typescript,cpp,json,literal haskell', etc.","pattern":"^(![-\\w_\\s]+)(,![-\\w_\\s]+)*$","type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"Sets the programming language id to match file type."},"languageSettings":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking. See [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define additional available dictionaries.","scope":"resource","type":"array"},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"languageId":{"anyOf":[{"markdownDescription":"This can be '*', 'typescript', 'cpp', 'json', etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"This can be 'typescript,cpp,json,literal haskell', etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"This can be 'typescript,cpp,json,literal haskell', etc.","pattern":"^(![-\\w_\\s]+)(,![-\\w_\\s]+)*$","type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"The language id.  Ex: \"typescript\", \"html\", or \"php\".  \"*\" -- will match all languages."},"locale":{"anyOf":[{"markdownDescription":"This is a written language locale like: 'en', 'en-GB', 'fr', 'es', 'de', etc.","type":"string"},{"items":{"markdownDescription":"This is a written language locale like: 'en', 'en-GB', 'fr', 'es', 'de', etc.","type":"string"},"type":"array"}],"markdownDescription":"The locale filter, matches against the language. This can be a comma separated list. \"*\" will match all locales."},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the `ignoreRegExpList` and\n`includeRegExpList` options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*​/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```\nDefines a list of patterns that can be used with the `ignoreRegExpList` and\n`includeRegExpList` options.","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["languageId"],"type":"object"},"markdownDescription":"Additional settings for individual programming languages and locales.","scope":"resource","type":"array"},"loadDefaultConfiguration":{"default":true,"markdownDescription":"By default, the bundled dictionary configurations are loaded. Explicitly setting this to `false`\nwill prevent ALL default configuration from being loaded.","type":"boolean"},"maxDuplicateProblems":{"default":5,"markdownDescription":"The maximum number of times the same word can be flagged as an error in a file.","type":"number"},"maxNumberOfProblems":{"default":10000,"markdownDescription":"The maximum number of problems to report in a file.","type":"number"},"minWordLength":{"default":4,"markdownDescription":"The minimum length of a word before checking it against a dictionary.","type":"number"},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"numSuggestions":{"default":10,"markdownDescription":"Number of suggestions to make.","type":"number"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the `ignoreRegExpList` and\n`includeRegExpList` options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*​/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```\nDefines a list of patterns that can be used with the `ignoreRegExpList` and\n`includeRegExpList` options.","type":"array"},"pnpFiles":{"default":[".pnp.js",".pnp.cjs"],"items":{"type":"string"},"markdownDescription":"The PnP files to search for. Note: `.mjs` files are not currently supported.","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"suggestionNumChanges":{"default":3,"markdownDescription":"The maximum number of changes allowed on a word to be considered a suggestions.\n\nFor example, appending an `s` onto `example` -> `examples` is considered 1 change.\n\nRange: between 1 and 5.","type":"number"},"suggestionsTimeout":{"default":500,"markdownDescription":"The maximum amount of time in milliseconds to generate suggestions for a word.","type":"number"},"usePnP":{"default":false,"markdownDescription":"Packages managers like Yarn 2 use a `.pnp.cjs` file to assist in loading\npackages stored in the repository.\n\nWhen true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it.","type":"boolean"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["filename"],"type":"object"},"markdownDescription":"Overrides are used to apply settings for specific files in your project.\n\n**Example:**\n\n```jsonc\n\"cSpell.overrides\": [\n  // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n  {\n    \"filename\": \"**​/{*.hrr,*.crr}\",\n    \"languageId\": \"cpp\"\n  },\n  // Force `dutch/**​/*.txt` to be treated as Dutch (dictionary needs to be installed separately):\n  {\n    \"filename\": \"**​/dutch/**​/*.txt\",\n    \"language\": \"nl\"\n  }\n]\n```","scope":"resource","type":"array"},"cSpell.patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the `#cSpell.ignoreRegExpList#` and\n`#cSpell.includeRegExpList#` options.\n\n**Example:**\n\n```jsonc\n\"cSpell.patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*​/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  }\n]\n```","scope":"resource","type":"array"},"cSpell.suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"}},"title":"CSpell","type":"object"},{"additionalProperties":false,"order":19,"properties":{"cSpell.experimental.enableRegexpView":{"default":false,"markdownDescription":"Show Regular Expression Explorer","scope":"application","type":"boolean"},"cSpell.experimental.enableSettingsViewerV2":{"default":false,"markdownDescription":"Enable the Settings Viewer V2 Extension","scope":"application","type":"boolean"}},"title":"Experimental","type":"object"},{"additionalProperties":false,"order":3,"properties":{"cSpell.allowedSchemas":{"default":["file","gist","repo","sftp","untitled","vscode-notebook-cell","vscode-scm","vscode-userdata"],"items":{"type":"string"},"markdownDescription":"Control which file schemas will be checked for spelling (VS Code must be restarted for this setting to take effect).\n\n\nSome schemas have special meaning like:\n- `untitled` - Used for new documents that have not yet been saved\n- `vscode-notebook-cell` - Used for validating segments of a Notebook.\n- `vscode-userdata` - Needed to spell check `.code-snippets`","scope":"window","title":"Define Allowed Schemas","type":"array"},"cSpell.checkOnlyEnabledFileTypes":{"default":true,"markdownDescription":"By default, the spell checker checks only enabled file types. Use `#cSpell.enableFiletypes#`\nto turn on / off various file types.\n\nWhen this setting is `false`, all file types are checked except for the ones disabled by `#cSpell.enableFiletypes#`.\nSee `#cSpell.enableFiletypes#` on how to disable a file type.","scope":"resource","title":"Check Only Enabled File Types","type":"boolean"},"cSpell.enableFiletypes":{"items":{"markdownDescription":"Enable / Disable checking file types (languageIds).\nTo disable a language, prefix with `!` as in `!json`,\n\n\nExample:\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```","pattern":"(^!*(?!\\s)[\\s\\w_.\\-]+$)|(^!*[*]$)","patternErrorMessage":"Allowed characters are `a-zA-Z`, `.`, `-`, `_` and space.","type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThese are in additional to the file types specified by `#cSpell.enabledLanguageIds#`.\nTo disable a language, prefix with `!` as in `!json`,\n\n\n**Example: individual file types**\n\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```\n\n**Example: enable all file types**\n\n```\n*           // enable checking for all file types\n!json       // except for json\n```","scope":"resource","title":"File Types to Check","type":"array","uniqueItems":true},"cSpell.files":{"items":{"markdownDescription":"These are glob expressions.","type":"string"},"markdownDescription":"Glob patterns of files to be checked.\nGlob patterns are relative to the `#cSpell.globRoot#` of the configuration file that defines them.","scope":"resource","type":"array"},"cSpell.globRoot":{"markdownDescription":"The root to use for glob patterns found in this configuration.\nDefault: The current workspace folder.\nUse `globRoot` to define a different location. `globRoot` can be relative to the location of this configuration file.\nDefining globRoot, does not impact imported configurations.\n\nSpecial Values:\n\n- `${workspaceFolder}` - Default - globs will be relative to the current workspace folder\\n\n- `${workspaceFolder:<name>}` - Where `<name>` is the name of the workspace folder.","scope":"resource","type":"string"},"cSpell.ignorePaths":{"default":["package-lock.json","node_modules","vscode-extension",".git/objects",".vscode",".vscode-insiders"],"items":{"markdownDescription":"Simple Glob string, the root will be globRoot.","type":"string"},"markdownDescription":"Glob patterns of files to be ignored. The patterns are relative to the `#cSpell.globRoot#` of the configuration file that defines them.","scope":"resource","title":"Glob patterns of files to be ignored","type":"array"},"cSpell.import":{"items":{"markdownDescription":"A File System Path. Relative paths are relative to the configuration file.","type":"string"},"markdownDescription":"Allows this configuration to inherit configuration for one or more other files.\n\nSee [Importing / Extending Configuration](https://cspell.org/configuration/imports/) for more details.","scope":"resource","type":"array"},"cSpell.noConfigSearch":{"markdownDescription":"Prevents searching for local configuration when checking individual documents.","scope":"resource","type":"boolean"},"cSpell.spellCheckOnlyWorkspaceFiles":{"default":false,"markdownDescription":"Only spell check files that are in the currently open workspace.\nThis same effect can be achieved using the `#cSpell.files#` setting.\n\n\n```js\n\"cSpell.files\": [\"/**\"]\n```","scope":"window","title":"Spell Check Only Workspace Files","type":"boolean"},"cSpell.useGitignore":{"default":true,"markdownDescription":"Tells the spell checker to load `.gitignore` files and skip files that match the globs in the `.gitignore` files found.","scope":"resource","type":"boolean"},"cSpell.usePnP":{"markdownDescription":"Packages managers like Yarn 2 use a `.pnp.cjs` file to assist in loading\npackages stored in the repository.\n\nWhen true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it.","scope":"resource","type":"boolean"},"cSpell.workspaceRootPath":{"markdownDescription":"Define the path to the workspace root folder in a multi-root workspace.\nBy default it is the first folder.\n\nThis is used to find the `cspell.json` file for the workspace.\n\n\n**Example: use the `client` folder**\n```\n${workspaceFolder:client}\n```","scope":"resource","title":"Workspace Root Folder Path","type":"string"}},"title":"Files, Folders, and Workspaces","type":"object"},{"additionalProperties":false,"order":1,"properties":{"cSpell.caseSensitive":{"markdownDescription":"Determines if words must match case and accent rules.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n  Note: Some languages like Portuguese have case sensitivity turned on by default.\n  You must use `#cSpell.languageSettings#` to turn it off.\n- `true` - Case and accents are enforced by default.","scope":"resource","type":"boolean"},"cSpell.customDictionaries":{"additionalProperties":{"anyOf":[{"title":"Named dictionary to be enabled / disabled\n- `true` - turn on the named dictionary\n- `false` - turn off the named dictionary","type":"boolean"},{"additionalProperties":false,"markdownDescription":"Define a custom dictionary to be included.","properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"title":"Custom Dictionary Entry","type":"object"}]},"markdownDescription":"Define custom dictionaries to be included by default.\nIf `addWords` is `true` words will be added to this dictionary.\n\n\n**Example:**\n\n```js\n\"cSpell.customDictionaries\": {\n  \"project-words\": {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  },\n  \"custom\": true, // Enable the `custom` dictionary\n  \"internal-terms\": false // Disable the `internal-terms` dictionary\n}\n```","scope":"resource","title":"Custom Dictionaries","type":"object"},"cSpell.dictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries to use.\nEach entry should match the name of the dictionary.\nTo remove a dictionary from the list add `!` before the name.\ni.e. `!typescript` will turn off the dictionary with the name `typescript`.","scope":"resource","type":"array"},"cSpell.dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define additional available dictionaries.","scope":"resource","type":"array"},"cSpell.flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","scope":"resource","type":"array"},"cSpell.ignoreWords":{"items":{"type":"string"},"markdownDescription":"A list of words to be ignored by the spell checker.","scope":"resource","type":"array"},"cSpell.language":{"default":"en","markdownDescription":"Current active spelling language.\n\nExample: \"en-GB\" for British English\n\nExample: \"en,nl\" to enable both English and Dutch","scope":"resource","type":"string"},"cSpell.languageSettings":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking. See [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description.","type":"string"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define additional available dictionaries.","scope":"resource","type":"array"},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"markdownDescription":"A PatternRef is a Pattern or PatternId.","type":"string"},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"languageId":{"anyOf":[{"markdownDescription":"This can be '*', 'typescript', 'cpp', 'json', etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"This can be 'typescript,cpp,json,literal haskell', etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"This can be 'typescript,cpp,json,literal haskell', etc.","pattern":"^(![-\\w_\\s]+)(,![-\\w_\\s]+)*$","type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"The language id.  Ex: \"typescript\", \"html\", or \"php\".  \"*\" -- will match all languages."},"locale":{"anyOf":[{"markdownDescription":"This is a written language locale like: 'en', 'en-GB', 'fr', 'es', 'de', etc.","type":"string"},{"items":{"markdownDescription":"This is a written language locale like: 'en', 'en-GB', 'fr', 'es', 'de', etc.","type":"string"},"type":"array"}],"markdownDescription":"The locale filter, matches against the language. This can be a comma separated list. \"*\" will match all locales."},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the `ignoreRegExpList` and\n`includeRegExpList` options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*​/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```\nDefines a list of patterns that can be used with the `ignoreRegExpList` and\n`includeRegExpList` options.","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["languageId"],"type":"object"},"markdownDescription":"Additional settings for individual programming languages and locales.","scope":"resource","type":"array"},"cSpell.noSuggestDictionaries":{"items":{"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }","type":"string"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","scope":"resource","type":"array"},"cSpell.userWords":{"items":{"type":"string"},"markdownDescription":"Words to add to global dictionary -- should only be in the user config file.","scope":"resource","type":"array"},"cSpell.words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","scope":"resource","type":"array"}},"title":"Languages and Dictionaries","type":"object"},{"additionalProperties":false,"order":20,"properties":{"cSpell.allowCompoundWords":{"default":false,"markdownDescription":"Enable / Disable allowing word compounds.\n- `true` means `arraylength` would be ok\n- `false` means it would not pass.\n\nNote: this can also cause many misspelled words to seem correct.","scope":"resource","type":"boolean"},"cSpell.customFolderDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the folder.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Folder Dictionaries","type":"array"},"cSpell.customUserDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the user.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"application","title":"Custom User Dictionaries","type":"array"},"cSpell.customWorkspaceDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf they name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```\n~/dictionaries/custom_dictionary.txt\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```\n${workspaceFolder:client}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might no as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```\n${workspaceFolder}/build/custom_dictionary.txt\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```\n./build/custom_dictionary.txt\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the workspace.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Workspace Dictionaries","type":"array"},"cSpell.enabledLanguageIds":{"default":["asciidoc","c","cpp","csharp","css","elixir","erlang","git-commit","go","graphql","handlebars","haskell","html","jade","java","javascript","javascriptreact","json","jsonc","jupyter","latex","less","markdown","php","plaintext","python","pug","restructuredtext","rust","scala","scss","scminput","swift","text","typescript","typescriptreact","vue","yaml","yml"],"items":{"markdownDescription":"This can be '*', 'typescript', 'cpp', 'json', etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Specify a list of file types to spell check. It is better to use `#cSpell.enableFiletypes#` to Enable / Disable checking files types.","scope":"resource","title":"Enabled Language Ids","type":"array","uniqueItems":true}},"title":"Legacy","type":"object"},{"additionalProperties":false,"order":4,"properties":{"cSpell.blockCheckingWhenAverageChunkSizeGreaterThan":{"default":80,"markdownDescription":"The maximum average length of chunks of text without word breaks.\n\n\nA chunk is the characters between absolute word breaks.\nAbsolute word breaks match: `/[\\s,{}[\\]]/`\n\n\n**Error Message:** _Average Word Size is Too High._\n\n\nIf you are seeing this message, it means that the file contains mostly long lines\nwithout many word breaks.","scope":"language-overridable","type":"number"},"cSpell.blockCheckingWhenLineLengthGreaterThan":{"default":10000,"markdownDescription":"The maximum line length.\n\n\nBlock spell checking if lines are longer than the value given.\nThis is used to prevent spell checking generated files.\n\n\n**Error Message:** _Lines are too long._","scope":"language-overridable","type":"number"},"cSpell.blockCheckingWhenTextChunkSizeGreaterThan":{"default":500,"markdownDescription":"The maximum length of a chunk of text without word breaks.\n\n\nIt is used to prevent spell checking of generated files.\n\n\nA chunk is the characters between absolute word breaks.\nAbsolute word breaks match: `/[\\s,{}[\\]]/`, i.e. spaces or braces.\n\n\n**Error Message:** _Maximum Word Length is Too High._\n\n\nIf you are seeing this message, it means that the file contains a very long line\nwithout many word breaks.","scope":"language-overridable","type":"number"},"cSpell.checkLimit":{"default":500,"markdownDescription":"The limit in K-Characters to be checked in a file.","scope":"resource","type":"number"},"cSpell.spellCheckDelayMs":{"default":50,"markdownDescription":"Delay in ms after a document has changed before checking it for spelling errors.","scope":"application","type":"number"},"cSpell.suggestionsTimeout":{"default":400,"markdownDescription":"The maximum amount of time in milliseconds to generate suggestions for a word.","scope":"resource","type":"number"}},"title":"Performance","type":"object"},{"additionalProperties":false,"order":2,"properties":{"cSpell.autoFormatConfigFile":{"default":false,"markdownDescription":"If a `cspell` configuration file is updated, format the configuration file\nusing the VS Code Format Document Provider. This will cause the configuration\nfile to be saved prior to being updated.","scope":"window","title":"Auto Format Configuration File","type":"boolean"},"cSpell.diagnosticLevel":{"default":"Information","enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"Issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of the squiggle.","scope":"resource","title":"Set Diagnostic Reporting Level","type":"string"},"cSpell.hideAddToDictionaryCodeActions":{"default":false,"markdownDescription":"Hide the options to add words to dictionaries or settings.","scope":"resource","type":"boolean"},"cSpell.maxDuplicateProblems":{"default":5,"markdownDescription":"The maximum number of times the same word can be flagged as an error in a file.","scope":"resource","type":"number"},"cSpell.maxNumberOfProblems":{"default":100,"markdownDescription":"Controls the maximum number of spelling errors per document.","scope":"resource","type":"number"},"cSpell.minWordLength":{"default":4,"markdownDescription":"The minimum length of a word before checking it against a dictionary.","scope":"resource","type":"number"},"cSpell.numSuggestions":{"default":8,"markdownDescription":"Controls the number of suggestions shown.","scope":"resource","type":"number"},"cSpell.showAutocompleteSuggestions":{"default":false,"markdownDescription":"Show CSpell in-document directives as you type.\n\n**Note:** VS Code must be restarted for this setting to take effect.","scope":"language-overridable","type":"boolean"},"cSpell.showCommandsInEditorContextMenu":{"default":true,"markdownDescription":"Show Spell Checker actions in Editor Context Menu","scope":"application","type":"boolean"},"cSpell.showStatus":{"default":true,"markdownDescription":"Display the spell checker status on the status bar.","scope":"application","type":"boolean"},"cSpell.showStatusAlignment":{"default":"Right","enum":["Left","Right"],"enumDescriptions":["Left Side of Statusbar","Right Side of Statusbar"],"markdownDescription":"The side of the status bar to display the spell checker status.","scope":"application","type":"string"},"cSpell.showSuggestionsLinkInEditorContextMenu":{"default":true,"markdownDescription":"Show Spelling Suggestions link in the top level context menu.","scope":"application","type":"boolean"},"cSpell.suggestionMenuType":{"default":"quickPick","enum":["quickPick","quickFix"],"enumDescriptions":["Suggestions will appear as a drop down at the top of the IDE. (Best choice for Vim Key Bindings)","Suggestions will appear inline near the word, inside the text editor."],"markdownDescription":"The type of menu used to display spelling suggestions.","scope":"resource","type":"string"},"cSpell.suggestionNumChanges":{"default":3,"markdownDescription":"The maximum number of changes allowed on a word to be considered a suggestions.\n\nFor example, appending an `s` onto `example` -> `examples` is considered 1 change.\n\nRange: between 1 and 5.","scope":"resource","type":"number"},"cSpell.validateDirectives":{"markdownDescription":"Verify that the in-document directives are correct.","scope":"window","type":"boolean"}},"title":"Reporting and Display","type":"object"}]},"workspaces":{"packages":["docs","packages/*","tools/*"],"nohoist":["@internal/docs","integration-tests","integration-tests/**","**/@types/jest-when","**/@types/jest"]},"scripts":{"build-package-schema":"yarn workspace code-spell-checker-server build-schema && build-tools update-package-schema && yarn prettier:fix-schema","postinstall":"echo postinstall","build":"yarn build:workspaces && yarn build:schema && yarn build:docs","build:docs":"yarn run gen-docs","build:readme":"inject-markdown README.md && prettier -w README.md && inject-markdown docs && prettier -w docs","build:schema":"yarn run build-package-schema","build:workspaces":"yarn workspaces run build","clean":"yarn workspaces run clean && shx rm -rf \"packages/*/node_modules\" \"modules/*/node_modules\" \"modules/**/dist\" ","build-production":"yarn workspaces run build-production","build-release":"yarn run build && yarn run package-extension","gen-docs":"yarn workspace @internal/docs gen-docs","package-extension":"vsce package -o ./build","prettier:check":"prettier \"**/*.{ts,tsx,js,json,md}\" -c","prettier:fix":"yarn prettier:check -w","prettier:fix-schema":"prettier -w \"**/*.schema.json\"","test-vsce-build":"vsce package -o ./temp","remove-test-files":"shx rm -rf \"packages/*/{out,dist,settingsViewer}/**/*.test.js\"","vscode:prepublish":"yarn run build-production && yarn run remove-test-files","lint":"yarn lint:eslint && yarn prettier:fix","lint:eslint":"eslint . --fix --cache","lint-docs":"prettier -w \"docs/**/*.{md,markdown,yaml,yml,json,html,htm,js,ts}\"","lint-docs-ci":"prettier -c \"docs/**/*.{md,markdown,yaml,yml,json,html,htm,js,ts}\"","test-client-integration":"yarn workspace @internal/integration-tests test-integration","test":"yarn workspaces run test","update-packages":"yarn upgrade && yarn run package-json-dependency-updater -u && yarn","preinstall":"npx only-allow yarn"},"devDependencies":{"@tsconfig/node16":"^16.1.1","@types/jest":"^29.5.4","@types/jest-when":"^3.5.2","@types/node":"^18.17.15","@types/vscode":"1.80.0","@types/vscode-webview":"^1.57.2","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/vsce":"^2.21.0","concurrently":"^8.2.1","esbuild":"^0.19.2","eslint":"^8.49.0","eslint-config-prettier":"^9.0.0","eslint-import-resolver-typescript":"^3.6.0","eslint-plugin-import":"^2.28.1","eslint-plugin-jest":"^27.2.3","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^5.0.0","eslint-plugin-promise":"^6.1.1","eslint-plugin-simple-import-sort":"^10.0.0","eslint-plugin-unicorn":"^48.0.1","inject-markdown":"^2.0.0","jest":"^29.6.4","jest-mock-vscode":"^2.1.0","jest-when":"^3.6.0","ovsx":"^0.8.3","prettier":"^3.0.3","rollup":"^3.29.1","rollup-plugin-dts":"^6.0.2","shx":"^0.3.4","ts-jest":"^29.1.1","typescript":"^5.2.2","vite":"^4.4.9","vitest":"^0.34.4"},"dependencies":{"@cspell/cspell-bundled-dicts":"^7.3.5","@cspell/cspell-types":"^7.3.5","@tsconfig/node18":"^18.2.1","@types/react":"^17.0.65","cspell":"^7.3.5","regexp-worker":"^2.0.2"},"comment-resolutions":{"@types/react":"Can be removed after moving to react 18."},"resolutions":{"@types/react":"^17.0.44"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/streetsidesoftware.code-spell-checker-3.0.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Street Side Software","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7","publisherId":"67600ca7-88fb-4104-9f7e-dd51c00facf2","publisherDisplayName":"Street Side Software","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"adpyke.codesnap","uuid":"8c1fc960-44b1-45e8-89b5-85f982fdaf27"},"manifest":{"name":"codesnap","displayName":"CodeSnap","description":"📷 Take beautiful screenshots of your code","version":"1.3.4","repository":{"type":"git","url":"https://github.com/kufii/CodeSnap"},"publisher":"adpyke","icon":"icon.png","license":"MIT","engines":{"vscode":"^1.52.0"},"keywords":["screenshot","snippet","snap","clipboard","share","polacode","carbon","codesnap"],"categories":["Other"],"activationEvents":["onCommand:codesnap.start"],"main":"./src/extension.js","contributes":{"commands":[{"command":"codesnap.start","title":"CodeSnap 📸"}],"menus":{"editor/context":[{"command":"codesnap.start"}]},"configuration":{"type":"object","title":"CodeSnap","properties":{"codesnap.backgroundColor":{"scope":"resource","type":"string","default":"#abb8c3","description":"The background color of the snippet's container"},"codesnap.boxShadow":{"scope":"resource","type":"string","default":"rgba(0, 0, 0, 0.55) 0px 20px 68px","description":"The CSS box-shadow for the snippet"},"codesnap.containerPadding":{"scope":"resource","type":"string","default":"3em","description":"The padding for the snippet's container"},"codesnap.roundedCorners":{"scope":"resource","type":"boolean","default":true,"description":"Use rounded corners for the window"},"codesnap.showWindowControls":{"scope":"resource","type":"boolean","default":true,"description":"Display OS X style window controls"},"codesnap.showWindowTitle":{"scope":"resource","type":"boolean","default":false,"description":"Display window title with open folder / file name"},"codesnap.showLineNumbers":{"scope":"resource","type":"boolean","default":true,"description":"Display line numbers"},"codesnap.realLineNumbers":{"scope":"resource","type":"boolean","default":false,"description":"Start from the selection's line number instead of 1"},"codesnap.transparentBackground":{"scope":"resource","type":"boolean","default":false,"description":"Use a transparent background when taking the screenshot"},"codesnap.target":{"scope":"resource","type":"string","enum":["container","window"],"default":"container","description":"Take the shot with or without the container"},"codesnap.shutterAction":{"scope":"resource","type":"string","enum":["save","copy"],"default":"save","description":"The behavior of the shutter button"}}}},"scripts":{"lint":"eslint .","format":"prettier --write \"**/*.{js,jsx,md,json,css,prettierrc,eslintrc,html}\"","check:format":"prettier --check \"**/*.{js,jsx,md,json,css,prettierrc,eslintrc,html}\"","check":"npm run lint && npm run check:format"},"devDependencies":{"eslint":"^7.24.0","eslint-config-adpyke-es6":"^1.4.13","eslint-config-prettier":"^8.2.0","prettier":"^2.2.1","@types/vscode":"^1.52.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"^14.14.40","glob":"^7.1.6","mocha":"^8.3.2","typescript":"^4.2.4","vscode-test":"^1.5.2"},"dependencies":{"dom-to-image-even-more":"^1.0.4"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/adpyke.codesnap-1.3.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"adpyke","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"8c1fc960-44b1-45e8-89b5-85f982fdaf27","publisherId":"8d7f2028-26ae-4724-8306-a1c8bb6c6794","publisherDisplayName":"adpyke","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"thang-nm.catppuccin-perfect-icons","uuid":"d29b49ee-781a-4913-8eba-21fd00d77969"},"manifest":{"publisher":"thang-nm","name":"catppuccin-perfect-icons","displayName":"Catppuccin Perfect Icons","type":"module","version":"0.21.32","description":"🌈 Unofficial. Pixel perfect + more icons + new palettes","author":"thang-nm","license":"MIT","repository":{"type":"git","url":"https://github.com/thang-nm/Catppuccin-Perfect-Icons"},"keywords":["catppuccin","theme","fancy","pastel-colors","perfect","pixel perfect","perfect pixel","line icons","aura","ayu","dracula","monokai","sequoia","vscode","vscode-theme","vscode-icons","vscode-extension"],"categories":["Themes"],"icon":"logo.png","files":["dist"],"engines":{"vscode":"^1.69.0"},"contributes":{"iconThemes":[{"id":"catppuccin-perfect-mocha","label":"Catppuccin Perfect Mocha","path":"themes/mocha/theme.json"},{"id":"catppuccin-perfect-latte","label":"Catppuccin Perfect Latte","path":"themes/latte/theme.json"},{"id":"catppuccin-perfect-frappe","label":"Catppuccin Perfect Frappé","path":"themes/frappe/theme.json"},{"id":"catppuccin-perfect-macchiato","label":"Catppuccin Perfect Macchiato","path":"themes/macchiato/theme.json"},{"id":"catppuccin-perfect-aura","label":"Catppuccin Perfect Aura","path":"themes/aura/theme.json"},{"id":"catppuccin-perfect-ayu","label":"Catppuccin Perfect Ayu","path":"themes/ayu/theme.json"},{"id":"catppuccin-perfect-dracula","label":"Catppuccin Perfect Dracula","path":"themes/dracula/theme.json"},{"id":"catppuccin-perfect-monokai","label":"Catppuccin Perfect Monokai","path":"themes/monokai/theme.json"},{"id":"catppuccin-perfect-sequoia","label":"Catppuccin Perfect Sequoia","path":"themes/sequoia/theme.json"},{"id":"catppuccin-perfect-dark","label":"Catppuccin Perfect Dark","path":"themes/dark/theme.json"}]},"scripts":{"build":"yarn build:icons -a && yarn build:themes && yarn build:preview && yarn package","build:dev":"yarn build:icons -a && yarn build:themes && yarn package","build:icons":"tsx scripts/icons.ts","build:themes":"tsx scripts/themes.ts","build:preview":"tsx scripts/preview.ts","catwalk":"tsx scripts/catwalk.ts","dev":"chokidar \"src/**/*\" -c \"yarn build\"","integrity":"tsx scripts/integrity.ts","lint":"eslint .","lint:fix":"eslint . --fix","package":"vsce package --no-dependencies -o dist","release":"bumpp -t \"v%s\" -c \"chore: release v\""},"devDependencies":{"@antfu/eslint-config":"^0.38.6","@catppuccin/palette":"^0.1.8","@types/fs-extra":"^11.0.1","@types/node":"^18.16.5","@vscode/vsce":"^2.19.0","bumpp":"^9.1.0","chokidar-cli":"^3.0.0","colorsea":"^1.2.1","consola":"^3.1.0","eslint":"^8.40.0","fs-extra":"^11.1.1","pathe":"^1.1.0","puppeteer":"^20.1.2","scule":"^1.0.0","svgo":"^3.0.2","tsx":"^3.12.7","typescript":"^5.0.4"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/thang-nm.catppuccin-perfect-icons-0.21.32","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Thang Nguyen","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"d29b49ee-781a-4913-8eba-21fd00d77969","publisherId":"d718044f-0367-4e48-b7f5-ae1c3658f069","publisherDisplayName":"Thang Nguyen","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"dsznajder.es7-react-js-snippets","uuid":"19804510-b475-4dae-b0f7-6ca08fd1af0c"},"manifest":{"name":"es7-react-js-snippets","displayName":"ES7+ React/Redux/React-Native snippets","description":"Extensions for React, React-Native and Redux in JS/TS with ES7+ syntax. Customizable. Built-in integration with prettier.","version":"4.4.3","publisher":"dsznajder","icon":"images/logo.png","browser":"./lib/index.js","main":"./lib/index.js","keywords":["snippets","react","redux","react-native","customizable","javascript","typescript","prettier"],"license":"MIT","repository":{"type":"git","url":"https://github.com/dsznajder/vscode-es7-javascript-react-snippets"},"engines":{"vscode":"^1.60.0"},"categories":["Snippets"],"extensionKind":["ui","workspace"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onLanguage:typescript","onLanguage:typescriptReact","onLanguage:javascript","onLanguage:javascriptReact","onCommand:reactSnippets.search","onStartupFinished"],"contributes":{"commands":[{"command":"reactSnippets.search","title":"Snippet search"}],"keybindings":[{"command":"reactSnippets.search","key":"ctrl+alt+r","mac":"shift+cmd+r","when":"editorTextFocus"}],"configuration":{"title":"ES React/React-Native/Redux snippets","properties":{"reactSnippets.settings.prettierEnabled":{"type":"boolean","markdownDescription":"[EXPERIMENTAL: MIGHT NOT WORK]: Integrate prettier settings with code generated from snippets.","default":false},"reactSnippets.settings.importReactOnTop":{"type":"boolean","markdownDescription":"Controls if snippets should add `import React from 'react';` at the top of components.\nUse if you have React +17 and use jsx transform.","default":true},"reactSnippets.settings.typescript":{"type":"boolean","markdownDescription":"Controls if React components have typescript Props typing.","default":true},"reactSnippets.settings.languageScopes":{"type":"string","markdownDescription":"defines the language scopes for which the snippets will be available.\nUse comma separated values.\nFor example: `typescript,typescriptreact,javascript,javascriptreact`","default":"typescript,typescriptreact,javascript,javascriptreact"},"reactSnippets.settings.typescriptPropsStatePrefix":{"type":"string","markdownDescription":"Controls which prefix for typescript snippets should use for props/state.","default":"type","enum":["type","interface"]}}},"snippets":[{"language":"javascript","path":"./lib/snippets/generated.json"},{"language":"javascriptreact","path":"./lib/snippets/generated.json"},{"language":"typescript","path":"./lib/snippets/generated.json"},{"language":"typescriptreact","path":"./lib/snippets/generated.json"}]},"scripts":{"vscode:prepublish":"yarn compile","compile":"rm -rf lib; tsc -p ./ --noEmit false --module commonjs --outDir lib","compile:dev":"rm -rf lib; tsc -p ./ --noEmit false --module commonjs --outDir lib","lint":"eslint --ext .js,.ts,.tsx ./src/","watch":"tsc -watch -p ./","typescript":"tsc --noEmit"},"dependencies":{"prettier":"2.5.1"},"peerDependencies":{"prettier":"^2"},"devDependencies":{"@babel/cli":"7.17.0","@babel/eslint-parser":"7.17.0","@babel/preset-typescript":"7.16.7","@types/node":"17.0.16","@types/prettier":"2.4.3","@types/vscode":"^1.60.0","@typescript-eslint/eslint-plugin":"5.11.0","@typescript-eslint/parser":"5.11.0","eslint":"8.8.0","eslint-config-prettier":"8.3.0","eslint-plugin-babel":"5.3.1","eslint-plugin-eslint-comments":"3.2.0","eslint-plugin-import":"2.25.4","eslint-plugin-jest":"26.1.0","eslint-plugin-prettier":"4.0.0","eslint-plugin-simple-import-sort":"7.0.0","prettier":"2.5.1","typescript":"4.5.5"},"prettier":{"bracketSameLine":false,"bracketSpacing":true,"printWidth":80,"semi":true,"singleQuote":true,"tabWidth":2,"trailingComma":"all","useTabs":false,"endOfLine":"auto"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/dsznajder.es7-react-js-snippets-4.4.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"dsznajder","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"19804510-b475-4dae-b0f7-6ca08fd1af0c","publisherId":"7ea644b4-2d93-4979-aac5-a12afebeb762","publisherDisplayName":"dsznajder","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"tamasfe.even-better-toml","uuid":"b2215d5f-675e-4a2b-b6ac-1ca737518b78"},"manifest":{"name":"even-better-toml","displayName":"Even Better TOML","description":"Fully-featured TOML support","version":"0.19.2","autoTag":{"enabled":true},"repository":{"url":"https://github.com/tamasfe/taplo"},"bugs":{"url":"https://github.com/tamasfe/taplo/issues"},"publisher":"tamasfe","author":{"name":"tamasfe"},"preview":true,"icon":"taplo-icon.png","galleryBanner":{"color":"#731c12","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.68.0"},"categories":["Programming Languages","Linters","Formatters","Other"],"activationEvents":["onLanguage:toml","onLanguage:cargoLock","onCommand:evenBetterToml.pasteAsJson","onCommand:evenBetterToml.copyAsJson","onCommand:evenBetterToml.pasteAsToml","onCommand:evenBetterToml.copyAsToml"],"keywords":["toml","syntax","rust","formatter","config"],"extensionKind":["workspace"],"contributes":{"grammars":[{"language":"toml","scopeName":"source.toml","path":"./toml.tmLanguage.json"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./toml.frontmatter.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"markdown.toml.codeblock","path":"./toml.markdown.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.toml":"toml"}}],"languages":[{"id":"toml","aliases":["TOML"],"extensions":[".toml"],"filenames":["Cargo.lock"],"configuration":"./language-configuration.json"}],"menus":{"commandPalette":[{"command":"evenBetterToml.selectSchema","when":"editorLangId == toml"},{"command":"evenBetterToml.copyAsJson"},{"command":"evenBetterToml.copyAsToml"},{"command":"evenBetterToml.pasteAsJson"},{"command":"evenBetterToml.pasteAsToml"}]},"commands":[{"command":"evenBetterToml.selectSchema","title":"TOML: Select Schema"},{"command":"evenBetterToml.copyAsJson","title":"TOML: Copy as JSON","enablement":"editorHasSelection"},{"command":"evenBetterToml.copyAsToml","title":"TOML: Copy as TOML","enablement":"editorHasSelection"},{"command":"evenBetterToml.pasteAsJson","title":"TOML: Paste as JSON"},{"command":"evenBetterToml.pasteAsToml","title":"TOML: Paste as TOML"}],"semanticTokenTypes":[{"id":"tomlArrayKey","superType":"variable","description":"Keys of regular arrays."},{"id":"tomlTableKey","superType":"variable","description":"Keys of inline tables."}],"semanticTokenScopes":[{"scopes":{"tomlArrayKey":["support.type.property-name.array.toml"],"tomlTableKey":["support.type.property-name.table.toml"]}}],"configuration":{"title":"Even Better TOML","properties":{"evenBetterToml.taplo.bundled":{"description":"Use the bundled taplo language server. If set to `false`, the `taplo` executable must be found in PATH or must be set in `evenBetterToml.taplo.path`.","type":"boolean","scope":"resource","default":true},"evenBetterToml.taplo.path":{"description":"An absolute path to the `taplo` executable. `evenBetterToml.taplo.bundled` needs to be set to `false` for this to have any effect.","type":["string","null"],"scope":"resource","default":null},"evenBetterToml.taplo.environment":{"type":["object"],"scope":"resource","description":"Environment variables for Taplo.","additionalProperties":{"type":"string"},"default":{}},"evenBetterToml.taplo.extraArgs":{"type":["array","null"],"scope":"resource","description":"Additional arguments for Taplo. Has no effect for the bundled LSP.","items":{"type":"string"},"default":[]},"evenBetterToml.taplo.configFile.path":{"description":"An absolute, or workspace relative path to the Taplo configuration file.","type":"string","default":null,"scope":"resource"},"evenBetterToml.taplo.configFile.enabled":{"description":"Whether to enable the usage of a Taplo configuration file.","type":"boolean","scope":"resource","default":true},"evenBetterToml.semanticTokens":{"description":"Enable semantic tokens for inline table and array keys.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.enabled":{"description":"Enable completion and validation based on JSON schemas.","type":"boolean","scope":"resource","default":true},"evenBetterToml.schema.links":{"description":"Whether to show clickable links for keys in the editor.","type":"boolean","scope":"resource","default":false},"evenBetterToml.schema.catalogs":{"description":"A list of URLs to schema catalogs where schemas and associations can be fetched from","type":"array","scope":"resource","items":{"type":"string"},"default":["https://www.schemastore.org/api/json/catalog.json"]},"evenBetterToml.schema.associations":{"description":"Document and schema associations.","markdownDescription":"Additional document and schema associations. \n\n The key must be a regular expression, this pattern is used to associate schemas with absolute document URIs. Overlapping patterns result in undefined behaviour and either matching schema can be used. \n\n The value must be an absolute URI to the JSON schema, for supported values and more information [read here](https://taplo.tamasfe.dev/configuration#visual-studio-code).","type":"object","scope":"resource","default":{}},"evenBetterToml.schema.cache.memoryExpiration":{"description":"The amount of seconds after which schemas will be invalidated from memory.","markdownDescription":"The amount of seconds after which schemas will be invalidated from memory. \n**NOTE**: setting too low values will cause performance issues and validation of some schemas will fail.","type":"integer","scope":"resource","minimum":0,"default":60},"evenBetterToml.schema.cache.diskExpiration":{"description":"The amount of seconds after which cached catalogs and schemas expire and will be attempted to be fetched again.","type":"integer","scope":"resource","minimum":0,"default":600},"evenBetterToml.completion.maxKeys":{"description":"The maximum amount of keys in a dotted key to display during completion, 0 effectively disables key completions.","type":"integer","scope":"resource","minimum":0,"default":5},"evenBetterToml.syntax.semanticTokens":{"description":"Whether to enable semantic tokens for tables and arrays.","type":"boolean","scope":"resource","default":true},"evenBetterToml.formatter.alignEntries":{"scope":"resource","type":"boolean","default":null,"description":"Align entries vertically. Entries that have table headers, comments, or blank lines between them are not aligned."},"evenBetterToml.formatter.alignComments":{"scope":"resource","type":"boolean","default":null,"description":"Align consecutive comments after entries and items vertically. This applies to comments that are after entries or array items"},"evenBetterToml.formatter.arrayTrailingComma":{"scope":"resource","type":"boolean","default":null,"description":"Put trailing commas for multiline arrays."},"evenBetterToml.formatter.arrayAutoExpand":{"scope":"resource","type":"boolean","default":null,"description":"Automatically expand arrays to multiple lines."},"evenBetterToml.formatter.inlineTableExpand":{"scope":"resource","type":"boolean","default":null,"description":"Expand values inside in line tables."},"evenBetterToml.formatter.arrayAutoCollapse":{"scope":"resource","type":"boolean","default":null,"description":"Automatically collapse arrays if they fit in one line."},"evenBetterToml.formatter.compactArrays":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside single-line arrays."},"evenBetterToml.formatter.compactInlineTables":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace padding inside inline tables."},"evenBetterToml.formatter.compactEntries":{"scope":"resource","type":"boolean","default":null,"description":"Omit whitespace around `=`."},"evenBetterToml.formatter.columnWidth":{"scope":"resource","type":"number","default":null,"description":"Target maximum column width after which arrays are expanded into new lines."},"evenBetterToml.formatter.indentTables":{"scope":"resource","type":"boolean","default":null,"description":"Indent subtables if they come in order."},"evenBetterToml.formatter.indentEntries":{"scope":"resource","type":"boolean","default":null,"description":"Indent entries under tables."},"evenBetterToml.formatter.indentString":{"scope":"resource","type":"string","default":null,"description":"Indentation to use, should be tabs or spaces but technically could be anything."},"evenBetterToml.formatter.trailingNewline":{"scope":"resource","type":"boolean","default":null,"description":"Add trailing newline to the source."},"evenBetterToml.formatter.reorderKeys":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder keys that are not separated by blank lines."},"evenBetterToml.formatter.reorderArrays":{"scope":"resource","type":"boolean","default":null,"description":"Alphabetically reorder array values that are not separated by blank lines."},"evenBetterToml.formatter.allowedBlankLines":{"scope":"resource","type":"number","default":null,"description":"The maximum amount of consecutive blank lines allowed."},"evenBetterToml.formatter.crlf":{"scope":"resource","type":"boolean","default":null,"description":"Use CRLF line endings."},"evenBetterToml.rules":{"scope":"resource","type":"array","default":[],"description":"Array of Taplo rules in JSON format, see https://taplo.tamasfe.dev/configuration/file.html#rules. The rules given here are appended to existing rules from config files, if any. There is no conversion done, all object keys must be snake_case, including formatting rules."}}}},"main":"./dist/extension.js","browser":"./dist/browser-extension.js","scripts":{"vscode:prepublish":"yarn build","open-in-browser":"vscode-test-web --extensionDevelopmentPath=. .","build:syntax":"ts-node --project node.tsconfig.json src/syntax/index.ts","build:browser-extension":"rollup -c rollup.config.browser-extension.js","build:browser-server":"rollup -c rollup.config.browser-server.js","build:node":"rollup -c rollup.config.js","build":"rm -rf dist && yarn build:syntax && yarn build:node && yarn build:browser-extension && yarn build:browser-server"},"dependencies":{"@taplo/lsp":"0.6.0","deep-equal":"^2.0.5","encoding":"^0.1.13","fast-glob":"^3.2.11","node-fetch":"^3.2.6","vscode-languageclient":"8.0.2-next.5","which":"^2.0.2"},"devDependencies":{"@rollup/plugin-commonjs":"^22.0.0","@rollup/plugin-node-resolve":"^13.3.0","@rollup/plugin-replace":"^4.0.0","@types/deep-equal":"^1.0.1","@types/node":"^18.0.0","@types/vscode":"^1.68.0","@types/which":"^2.0.1","@vscode/test-web":"^0.0.24","esbuild":"^0.14.45","rollup":"^2.75.6","rollup-plugin-esbuild":"^4.9.1","ts-node":"^10.8.1","typescript":"^4.7.4"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/tamasfe.even-better-toml-0.19.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"tamasfe","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"b2215d5f-675e-4a2b-b6ac-1ca737518b78","publisherId":"78c2102e-13a2-49ea-ac79-8d1bbacbbf0e","publisherDisplayName":"tamasfe","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ritwickdey.liveserver","uuid":"b63c44fd-0457-4696-99e9-dbfdf70d77de"},"manifest":{"name":"LiveServer","displayName":"Live Server","description":"Launch a development local Server with live reload feature for static & dynamic pages","version":"5.7.9","publisher":"ritwickdey","author":{"name":"Ritwick Dey","email":"ritwickdey@outlook.com","url":"http://twitter.com/Dey_Ritwick"},"engines":{"vscode":"^1.51.0"},"categories":["Other"],"keywords":["html preview","live preview","live reload","svg preview","open in browser","multi-root ready"],"preview":false,"galleryBanner":{"color":"#41205f","theme":"dark"},"activationEvents":["onStartupFinished"],"main":"./out/src/extension.js","contributes":{"commands":[{"command":"extension.liveServer.goOffline","title":"Stop Live Server","category":"Live Server"},{"command":"extension.liveServer.goOnline","title":"Open with Live Server","category":"Live Server"},{"command":"extension.liveServer.changeWorkspace","title":"Change Live Server workspace","category":"Live Server"}],"keybindings":[{"command":"extension.liveServer.goOffline","key":"alt+L alt+C","when":"editorTextFocus","mac":"cmd+L cmd+C"},{"command":"extension.liveServer.goOnline","key":"alt+L alt+O","when":"editorTextFocus","mac":"cmd+L cmd+O"}],"menus":{"editor/context":[{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOffline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == xml"}],"explorer/context":[{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == xml"}]},"configuration":{"title":"Live Server Config","properties":{"liveServer.settings.port":{"type":["number"],"default":5500,"minimum":0,"maximum":65535,"description":"Set Custom Port Number of Live Server. Set 0 if you want random port."},"liveServer.settings.root":{"type":["string"],"default":"/","pattern":"/|/[^\\/]","description":"Set Custom root of Live Server. \nTo change root the the server to sub folder of workspace, use '/' and relative path from workspace. \nExample: /subfolder1/subfolder2"},"liveServer.settings.CustomBrowser":{"type":["string","null"],"default":null,"enum":["chrome","chrome:PrivateMode","firefox","firefox:PrivateMode","microsoft-edge","blisk",null],"description":"Specify custom browser settings for Live Server. \nBy Default it will open your default favorite browser."},"liveServer.settings.ChromeDebuggingAttachment":{"type":["boolean"],"default":false,"description":"Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.\n NOTE: You have to install 'Debugger for Chrome' \nIf the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. \n\n CAUTION: If it is true, 'Launch Chrome against localhost' may not work."},"liveServer.settings.AdvanceCustomBrowserCmdLine":{"type":["string","null"],"default":null,"description":"Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.\n\n Examples : \nchrome --incognito --headless --remote-debugging-port=9222 \n C:\\\\Program Files\\\\Firefox Developer Edition\\\\firefox.exe --private-window"},"liveServer.settings.showOnStatusbar":{"type":"boolean","default":true,"description":"Change this to false if you don't want the button to show in the statusbar"},"liveServer.settings.NoBrowser":{"type":"boolean","default":false,"description":"If it is true live server will start without browser opened."},"liveServer.settings.ignoreFiles":{"type":"array","default":[".vscode/**","**/*.scss","**/*.sass","**/*.ts"],"description":"To ignore specific file changes"},"liveServer.settings.mount":{"type":"array","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}},"default":[],"description":"Mount a directory to a route. Such as [['/components', './node_modules']]"},"liveServer.settings.donotShowInfoMsg":{"type":"boolean","default":false,"description":"To disable information pop up messages."},"liveServer.settings.donotVerifyTags":{"type":"boolean","default":false,"description":"To turn off prompt warning message if body or head or other supporting tag is missing in your HTML."},"liveServer.settings.host":{"type":"string","default":"127.0.0.1","description":"To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1"},"liveServer.settings.useLocalIp":{"type":"boolean","default":false,"description":"Use local IP as host"},"liveServer.settings.proxy":{"type":"object","default":{"enable":false,"baseUri":"/","proxyUri":"http://127.0.0.1:80"},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable the feature."},"baseUri":{"type":"string","default":"/","pattern":""},"proxyUri":{"type":"string","default":"http://127.0.0.1:80","pattern":"(^http[s]?://)(.[^(\\|\\s)]+)$"}},"required":["enable","baseUri","proxyUri"],"additionalProperties":false,"description":"To Setup Proxy"},"liveServer.settings.useWebExt":{"type":"boolean","default":false,"description":"You have to install a browser extension. That will be works for your dynamic pages (like PHP)."},"liveServer.settings.wait":{"type":"number","default":100,"description":"Delay before live reloading. Value in milliseconds. Default is 100"},"liveServer.settings.fullReload":{"type":"boolean","default":false,"description":"By Default Live Server inject CSS changes without full reloading of browser. You can change this behavior by making this setting as `true`"},"liveServer.settings.https":{"type":"object","default":{"enable":false,"cert":"","key":"","passphrase":""},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable it."},"cert":{"type":"string","default":"","description":"Add full path certificate."},"key":{"type":"string","default":"","description":"Add full path key"},"passphrase":{"type":"string","default":"","description":"Add Pass Phrase."}},"required":["enable","cert","key","passphrase"],"additionalProperties":false,"description":"Setup https configuration"},"liveServer.settings.file":{"type":"string","default":"","description":"When set, serve this file (server root relative) for every 404 (useful for single-page applications)"},"liveServer.settings.multiRootWorkspaceName":{"type":"string","default":null,"description":"This the entry point of server when you're in multiroot workspace"}}}},"license":"MIT","icon":"images/icon.png","bugs":{"url":"https://github.com/ritwickdey/vscode-live-server/issues","email":"ritwickdey@outlook.com"},"repository":{"type":"git","url":"https://github.com/ritwickdey/vscode-live-server.git"},"homepage":"https://ritwickdey.github.io/vscode-live-server/","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","test":"run-s test:*","test:lint":"tslint --project .","test:unit":"node ./out/test/runTest.js","test:e2e":"wdio run ./test/wdio.conf.ts","precommit":"npm run test:lint","prepush":"npm run test:lint","watch":"tsc -watch -p ./"},"husky":{"hooks":{"pre-commit":"npm run precommit","pre-push":"npm run prepush"}},"devDependencies":{"@types/glob":"^7.1.1","@types/node":"^17.0.6","@types/vscode":"^1.51.0","@vscode/test-electron":"^2.0.1","@wdio/cli":"^7.19.3","@wdio/local-runner":"^7.19.3","@wdio/mocha-framework":"^7.19.3","@wdio/spec-reporter":"^7.19.1","glob":"^7.2.0","husky":"^1.2.1","mocha":"^9.2.2","npm-run-all":"^4.1.5","semver":"^7.3.6","ts-node":"^10.7.0","tslint":"^6.1.3","typescript":"^4.5.4","vsce":"^2.7.0","wdio-vscode-service":"^2.0.1","es5-ext":"0.10.53"},"dependencies":{"http-shutdown":"^1.2.0","ips":"^2.1.3","live-server":"file:lib\\live-server","opn":"^6.0.0","vsls":"^0.3.967"},"overrides":{"es5-ext":"0.10.53"},"announcement":{"onVersion":"5.7.9","message":"[NEW] LiveServer@5.7.9: Activation load time improved"}},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/ritwickdey.liveserver-5.7.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Ritwick Dey","metadata":{"installedTimestamp":1727425363882,"pinned":true,"source":"gallery","id":"b63c44fd-0457-4696-99e9-dbfdf70d77de","publisherId":"17fd9a78-e430-4a78-add2-ade4a8830352","publisherDisplayName":"Ritwick Dey","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"undefined_publisher.wallbash"},"manifest":{"name":"wallbash","displayName":"wallbash","description":"wallbash color integration","version":"0.0.1","engines":{"vscode":"^1.88.0"},"icon":"hyde.png","categories":["Themes"],"contributes":{"commands":[{"command":"extension.reloadWindow","title":"Reload Window"}],"themes":[{"label":"wallbash","uiTheme":"vs-dark","path":"./themes/wallbash-color-theme.json"}]},"publisher":"undefined_publisher"},"location":{"$mid":1,"path":"/home/evrenos/.vscode/extensions/undefined_publisher.wallbash-0.0.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"installedTimestamp":1727426346464,"pinned":true,"source":"vsix"},"isValid":true,"validations":[]}]}